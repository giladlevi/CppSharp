// ----------------------------------------------------------------------------
// <auto-generated>
// This is autogenerated code by CppSharp.
// Do not edit this file or all your changes will be lost after re-generation.
// </auto-generated>
// ----------------------------------------------------------------------------
#pragma once

#include "CppSharp.h"
#include <StandardLib.h>

namespace StandardLib
{
    ref class IntWrapper;
    ref class OStreamTest;
    ref class TestVectors;
    value struct IntWrapperValueType;
}

namespace StandardLib
{
    public ref class IntWrapper : ICppInstance
    {
    public:

        property ::IntWrapper* NativePtr;
        property System::IntPtr __Instance
        {
            virtual System::IntPtr get();
            virtual void set(System::IntPtr instance);
        }

        IntWrapper(::IntWrapper* native);
        static IntWrapper^ __CreateInstance(::System::IntPtr native);
        IntWrapper();

        IntWrapper(StandardLib::IntWrapper^ _0);

        ~IntWrapper();

        property int Value
        {
            int get();
            void set(int);
        }

        protected:
        bool __ownsNativeInstance;
    };

    public value struct IntWrapperValueType
    {
    public:

        IntWrapperValueType(::IntWrapperValueType* native);
        static IntWrapperValueType^ __CreateInstance(::System::IntPtr native);
        property int Value
        {
            int get();
            void set(int);
        }

        private:
        int __Value;
    };

    public ref class TestVectors : ICppInstance
    {
    public:

        property ::TestVectors* NativePtr;
        property System::IntPtr __Instance
        {
            virtual System::IntPtr get();
            virtual void set(System::IntPtr instance);
        }

        TestVectors(::TestVectors* native);
        static TestVectors^ __CreateInstance(::System::IntPtr native);
        TestVectors();

        TestVectors(StandardLib::TestVectors^ _0);

        ~TestVectors();

        property System::Collections::Generic::List<int>^ IntVector
        {
            System::Collections::Generic::List<int>^ get();
            void set(System::Collections::Generic::List<int>^);
        }

        property System::Collections::Generic::List<System::IntPtr>^ IntPtrVector
        {
            System::Collections::Generic::List<System::IntPtr>^ get();
            void set(System::Collections::Generic::List<System::IntPtr>^);
        }

        property System::Collections::Generic::List<StandardLib::IntWrapper^>^ IntWrapperVector
        {
            System::Collections::Generic::List<StandardLib::IntWrapper^>^ get();
            void set(System::Collections::Generic::List<StandardLib::IntWrapper^>^);
        }

        property System::Collections::Generic::List<StandardLib::IntWrapper^>^ IntWrapperPtrVector
        {
            System::Collections::Generic::List<StandardLib::IntWrapper^>^ get();
            void set(System::Collections::Generic::List<StandardLib::IntWrapper^>^);
        }

        property System::Collections::Generic::List<StandardLib::IntWrapperValueType>^ IntWrapperValueTypeVector
        {
            System::Collections::Generic::List<StandardLib::IntWrapperValueType>^ get();
            void set(System::Collections::Generic::List<StandardLib::IntWrapperValueType>^);
        }

        System::Collections::Generic::List<int>^ GetIntVector();

        int SumIntVector(System::Collections::Generic::List<int>^ vec);

        protected:
        bool __ownsNativeInstance;
    };

    public ref class OStreamTest : ICppInstance
    {
    public:

        property ::OStreamTest* NativePtr;
        property System::IntPtr __Instance
        {
            virtual System::IntPtr get();
            virtual void set(System::IntPtr instance);
        }

        OStreamTest(::OStreamTest* native);
        static OStreamTest^ __CreateInstance(::System::IntPtr native);
        OStreamTest();

        OStreamTest(StandardLib::OStreamTest^ _0);

        ~OStreamTest();

        static void WriteToOStream(System::IO::TextWriter^ stream, System::String^ s);

        static void WriteToOStreamPtr(System::IO::TextWriter^ stream, System::String^ s);

        protected:
        bool __ownsNativeInstance;
    };
}
