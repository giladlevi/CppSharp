// ----------------------------------------------------------------------------
// <auto-generated>
// This is autogenerated code by CppSharp.
// Do not edit this file or all your changes will be lost after re-generation.
// </auto-generated>
// ----------------------------------------------------------------------------
using System;
using System.Runtime.InteropServices;
using System.Security;

namespace Xspeed
{
    public unsafe partial struct ExampleStruct
    {
        public partial struct __Internal
        {
            public fixed sbyte arr[13];

            [SuppressUnmanagedCodeSecurity]
            [DllImport("DFITCMdApi", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                EntryPoint="??0ExampleStruct@@QAE@ABU0@@Z")]
            internal static extern global::System.IntPtr cctor_1(global::System.IntPtr instance, global::System.IntPtr _0);
        }

        private ExampleStruct.__Internal __instance;
        internal ExampleStruct.__Internal __Instance { get { return __instance; } }

        internal static global::Xspeed.ExampleStruct __CreateInstance(global::System.IntPtr native, bool skipVTables = false)
        {
            return new ExampleStruct(native.ToPointer(), skipVTables);
        }

        internal static global::Xspeed.ExampleStruct __CreateInstance(global::Xspeed.ExampleStruct.__Internal native, bool skipVTables = false)
        {
            return new ExampleStruct(native, skipVTables);
        }

        private ExampleStruct(global::Xspeed.ExampleStruct.__Internal native, bool skipVTables = false)
            : this()
        {
            __instance = native;
        }

        private ExampleStruct(void* native, bool skipVTables = false) : this()
        {
            __instance = *(global::Xspeed.ExampleStruct.__Internal*) native;
        }

        public ExampleStruct(global::Xspeed.ExampleStruct _0)
            : this()
        {
            var ____arg0 = _0.__Instance;
            var __arg0 = new global::System.IntPtr(&____arg0);
            fixed (__Internal* __instancePtr = &__instance)
            {
                __Internal.cctor_1(new global::System.IntPtr(__instancePtr), __arg0);
            }
        }

        public sbyte[] Arr
        {
            get
            {
                fixed (sbyte* __arrPtr = __instance.arr)
                {
                    sbyte[] __value = null;
                    if (__arrPtr != null)
                    {
                        __value = new sbyte[13];
                        for (int i = 0; i < 13; i++)
                            __value[i] = __arrPtr[i];
                    }
                    return __value;
                }
            }

            set
            {
                fixed (sbyte* __arrPtr = __instance.arr)
                {
                    if (value != null)
                    {
                        for (int i = 0; i < 13; i++)
                            __arrPtr[i] = value[i];
                    }
                }
            }
        }
    }
}
