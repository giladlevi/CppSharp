ImageRuntimeVersion: v4.0.30319
Assembly CppSharp.Parser.CLI, Version=0.0.*, Culture=Invariant Language (Invariant Country): 
	hash=SHA1, flags=PublicKey
Assembly mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Interface ICppInstance: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract, BeforeFieldInit
  Properties:
    IntPtr __Instance 'get set' : 
  Methods:
    get___Instance(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set___Instance(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Struct CppSharp.Parser.SourceLocation: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(UInt32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.SourceLocation*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    UInt32 ID  'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_ID(): PrivateScope, Public, HideBySig, SpecialName
    set_ID(UInt32): PrivateScope, Public, HideBySig, SpecialName
    op_Implicit(UInt32): PrivateScope, Public, Static, HideBySig, SpecialName
Class CppSharp.Parser.AST.Type: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(CppSharp.Parser.AST.Type): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.Parser.AST.TypeKind): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.Type*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    ICppInstance
    System.IDisposable
  Properties:
    Boolean IsDependent 'get set' : 
    CppSharp.Parser.AST.TypeKind Kind 'get set' : 
    IntPtr __Instance 'get set' : 
    CppSharp.CppParser.AST.Type* NativePtr 'get set' : 
  Methods:
    get_NativePtr(): PrivateScope, Public, HideBySig, SpecialName
    set_NativePtr(Type*): PrivateScope, Public, HideBySig, SpecialName
    get___Instance(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set___Instance(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Kind(): PrivateScope, Public, HideBySig, SpecialName
    set_Kind(TypeKind): PrivateScope, Public, HideBySig, SpecialName
    get_IsDependent(): PrivateScope, Public, HideBySig, SpecialName
    set_IsDependent(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    op_Implicit(TypeKind): PrivateScope, Public, Static, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class CppSharp.Parser.AST.TypeQualifiers: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.Parser.AST.TypeQualifiers): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.TypeQualifiers*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    ICppInstance
    System.IDisposable
  Properties:
    Boolean IsRestrict 'get set' : 
    Boolean IsVolatile 'get set' : 
    Boolean IsConst 'get set' : 
    IntPtr __Instance 'get set' : 
    CppSharp.CppParser.AST.TypeQualifiers* NativePtr 'get set' : 
  Methods:
    get_NativePtr(): PrivateScope, Public, HideBySig, SpecialName
    set_NativePtr(TypeQualifiers*): PrivateScope, Public, HideBySig, SpecialName
    get___Instance(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set___Instance(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_IsConst(): PrivateScope, Public, HideBySig, SpecialName
    set_IsConst(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsVolatile(): PrivateScope, Public, HideBySig, SpecialName
    set_IsVolatile(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsRestrict(): PrivateScope, Public, HideBySig, SpecialName
    set_IsRestrict(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class CppSharp.Parser.AST.QualifiedType: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(CppSharp.Parser.AST.QualifiedType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.QualifiedType*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    ICppInstance
    System.IDisposable
  Properties:
    CppSharp.Parser.AST.TypeQualifiers Qualifiers 'get set' : 
    CppSharp.Parser.AST.Type Type 'get set' : 
    IntPtr __Instance 'get set' : 
    CppSharp.CppParser.AST.QualifiedType* NativePtr 'get set' : 
  Methods:
    get_NativePtr(): PrivateScope, Public, HideBySig, SpecialName
    set_NativePtr(QualifiedType*): PrivateScope, Public, HideBySig, SpecialName
    get___Instance(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set___Instance(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Type(): PrivateScope, Public, HideBySig, SpecialName
    set_Type(Type): PrivateScope, Public, HideBySig, SpecialName
    get_Qualifiers(): PrivateScope, Public, HideBySig, SpecialName
    set_Qualifiers(TypeQualifiers): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class CppSharp.Parser.AST.TagType: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Type
    Void .ctor(CppSharp.Parser.AST.TagType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.TagType*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    CppSharp.Parser.AST.Declaration Declaration 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Declaration(): PrivateScope, Public, HideBySig, SpecialName
    set_Declaration(Declaration): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.ArrayType: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Type
    Void .ctor(CppSharp.Parser.AST.ArrayType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.ArrayType*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 ElementSize 'get set' IsLong : 
    Int32 Size 'get set' IsLong : 
    ArraySize SizeType 'get set' : 
    CppSharp.Parser.AST.QualifiedType QualifiedType 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_QualifiedType(): PrivateScope, Public, HideBySig, SpecialName
    set_QualifiedType(QualifiedType): PrivateScope, Public, HideBySig, SpecialName
    get_SizeType(): PrivateScope, Public, HideBySig, SpecialName
    set_SizeType(ArraySize): PrivateScope, Public, HideBySig, SpecialName
    get_Size(): PrivateScope, Public, HideBySig, SpecialName
    set_Size(Int32 IsLong): PrivateScope, Public, HideBySig, SpecialName
    get_ElementSize(): PrivateScope, Public, HideBySig, SpecialName
    set_ElementSize(Int32 IsLong): PrivateScope, Public, HideBySig, SpecialName
Struct CppSharp.Parser.AST.ArrayType+ArraySize: AutoLayout, AnsiClass, Class, NestedPublic, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    ArraySize Constant = 0 : Public, Static, Literal, HasDefault
    ArraySize Variable = 1 : Public, Static, Literal, HasDefault
    ArraySize Dependent = 2 : Public, Static, Literal, HasDefault
    ArraySize Incomplete = 3 : Public, Static, Literal, HasDefault
Class CppSharp.Parser.AST.FunctionType: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Type
    Void .ctor(CppSharp.Parser.AST.FunctionType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.FunctionType*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    UInt32 ParametersCount 'get ' : 
    CppSharp.Parser.AST.ExceptionSpecType ExceptionSpecType 'get set' : 
    CppSharp.Parser.AST.CallingConvention CallingConvention 'get set' : 
    CppSharp.Parser.AST.QualifiedType ReturnType 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_ReturnType(): PrivateScope, Public, HideBySig, SpecialName
    set_ReturnType(QualifiedType): PrivateScope, Public, HideBySig, SpecialName
    get_CallingConvention(): PrivateScope, Public, HideBySig, SpecialName
    set_CallingConvention(CallingConvention): PrivateScope, Public, HideBySig, SpecialName
    get_ExceptionSpecType(): PrivateScope, Public, HideBySig, SpecialName
    set_ExceptionSpecType(ExceptionSpecType): PrivateScope, Public, HideBySig, SpecialName
    get_ParametersCount(): PrivateScope, Public, HideBySig, SpecialName
    GetParameters(UInt32): PrivateScope, Public, HideBySig
    AddParameters(Parameter): PrivateScope, Public, HideBySig
    ClearParameters(): PrivateScope, Public, HideBySig
Class CppSharp.Parser.AST.PointerType: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Type
    Void .ctor(CppSharp.Parser.AST.PointerType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.PointerType*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    TypeModifier Modifier 'get set' : 
    CppSharp.Parser.AST.QualifiedType QualifiedPointee 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_QualifiedPointee(): PrivateScope, Public, HideBySig, SpecialName
    set_QualifiedPointee(QualifiedType): PrivateScope, Public, HideBySig, SpecialName
    get_Modifier(): PrivateScope, Public, HideBySig, SpecialName
    set_Modifier(TypeModifier): PrivateScope, Public, HideBySig, SpecialName
Struct CppSharp.Parser.AST.PointerType+TypeModifier: AutoLayout, AnsiClass, Class, NestedPublic, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    TypeModifier Value = 0 : Public, Static, Literal, HasDefault
    TypeModifier Pointer = 1 : Public, Static, Literal, HasDefault
    TypeModifier LVReference = 2 : Public, Static, Literal, HasDefault
    TypeModifier RVReference = 3 : Public, Static, Literal, HasDefault
Class CppSharp.Parser.AST.MemberPointerType: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Type
    Void .ctor(CppSharp.Parser.AST.MemberPointerType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.MemberPointerType*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    CppSharp.Parser.AST.QualifiedType Pointee 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Pointee(): PrivateScope, Public, HideBySig, SpecialName
    set_Pointee(QualifiedType): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.TypedefType: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Type
    Void .ctor(CppSharp.Parser.AST.TypedefType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.TypedefType*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    CppSharp.Parser.AST.TypedefNameDecl Declaration 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Declaration(): PrivateScope, Public, HideBySig, SpecialName
    set_Declaration(TypedefNameDecl): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.AttributedType: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Type
    Void .ctor(CppSharp.Parser.AST.AttributedType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.AttributedType*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    CppSharp.Parser.AST.QualifiedType Equivalent 'get set' : 
    CppSharp.Parser.AST.QualifiedType Modified 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Modified(): PrivateScope, Public, HideBySig, SpecialName
    set_Modified(QualifiedType): PrivateScope, Public, HideBySig, SpecialName
    get_Equivalent(): PrivateScope, Public, HideBySig, SpecialName
    set_Equivalent(QualifiedType): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.DecayedType: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Type
    Void .ctor(CppSharp.Parser.AST.DecayedType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.DecayedType*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    CppSharp.Parser.AST.QualifiedType Pointee 'get set' : 
    CppSharp.Parser.AST.QualifiedType Original 'get set' : 
    CppSharp.Parser.AST.QualifiedType Decayed 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Decayed(): PrivateScope, Public, HideBySig, SpecialName
    set_Decayed(QualifiedType): PrivateScope, Public, HideBySig, SpecialName
    get_Original(): PrivateScope, Public, HideBySig, SpecialName
    set_Original(QualifiedType): PrivateScope, Public, HideBySig, SpecialName
    get_Pointee(): PrivateScope, Public, HideBySig, SpecialName
    set_Pointee(QualifiedType): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.TemplateArgument: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(CppSharp.Parser.AST.TemplateArgument): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.TemplateArgument*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    ICppInstance
    System.IDisposable
  Properties:
    Int32 Integral 'get set' IsLong : 
    CppSharp.Parser.AST.Declaration Declaration 'get set' : 
    CppSharp.Parser.AST.QualifiedType Type 'get set' : 
    ArgumentKind Kind 'get set' : 
    IntPtr __Instance 'get set' : 
    CppSharp.CppParser.AST.TemplateArgument* NativePtr 'get set' : 
  Methods:
    get_NativePtr(): PrivateScope, Public, HideBySig, SpecialName
    set_NativePtr(TemplateArgument*): PrivateScope, Public, HideBySig, SpecialName
    get___Instance(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set___Instance(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Kind(): PrivateScope, Public, HideBySig, SpecialName
    set_Kind(ArgumentKind): PrivateScope, Public, HideBySig, SpecialName
    get_Type(): PrivateScope, Public, HideBySig, SpecialName
    set_Type(QualifiedType): PrivateScope, Public, HideBySig, SpecialName
    get_Declaration(): PrivateScope, Public, HideBySig, SpecialName
    set_Declaration(Declaration): PrivateScope, Public, HideBySig, SpecialName
    get_Integral(): PrivateScope, Public, HideBySig, SpecialName
    set_Integral(Int32 IsLong): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Struct CppSharp.Parser.AST.TemplateArgument+ArgumentKind: AutoLayout, AnsiClass, Class, NestedPublic, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    ArgumentKind Type = 0 : Public, Static, Literal, HasDefault
    ArgumentKind Declaration = 1 : Public, Static, Literal, HasDefault
    ArgumentKind NullPtr = 2 : Public, Static, Literal, HasDefault
    ArgumentKind Integral = 3 : Public, Static, Literal, HasDefault
    ArgumentKind Template = 4 : Public, Static, Literal, HasDefault
    ArgumentKind TemplateExpansion = 5 : Public, Static, Literal, HasDefault
    ArgumentKind Expression = 6 : Public, Static, Literal, HasDefault
    ArgumentKind Pack = 7 : Public, Static, Literal, HasDefault
Class CppSharp.Parser.AST.TemplateSpecializationType: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Type
    Void .ctor(CppSharp.Parser.AST.TemplateSpecializationType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.TemplateSpecializationType*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    UInt32 ArgumentsCount 'get ' : 
    CppSharp.Parser.AST.QualifiedType Desugared 'get set' : 
    CppSharp.Parser.AST.Template Template 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Template(): PrivateScope, Public, HideBySig, SpecialName
    set_Template(Template): PrivateScope, Public, HideBySig, SpecialName
    get_Desugared(): PrivateScope, Public, HideBySig, SpecialName
    set_Desugared(QualifiedType): PrivateScope, Public, HideBySig, SpecialName
    get_ArgumentsCount(): PrivateScope, Public, HideBySig, SpecialName
    GetArguments(UInt32): PrivateScope, Public, HideBySig
    AddArguments(TemplateArgument): PrivateScope, Public, HideBySig
    ClearArguments(): PrivateScope, Public, HideBySig
Class CppSharp.Parser.AST.DependentTemplateSpecializationType: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Type
    Void .ctor(CppSharp.Parser.AST.DependentTemplateSpecializationType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.DependentTemplateSpecializationType*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    UInt32 ArgumentsCount 'get ' : 
    CppSharp.Parser.AST.QualifiedType Desugared 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Desugared(): PrivateScope, Public, HideBySig, SpecialName
    set_Desugared(QualifiedType): PrivateScope, Public, HideBySig, SpecialName
    get_ArgumentsCount(): PrivateScope, Public, HideBySig, SpecialName
    GetArguments(UInt32): PrivateScope, Public, HideBySig
    AddArguments(TemplateArgument): PrivateScope, Public, HideBySig
    ClearArguments(): PrivateScope, Public, HideBySig
Class CppSharp.Parser.AST.TemplateParameterType: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Type
    Void .ctor(CppSharp.Parser.AST.TemplateParameterType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.TemplateParameterType*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsParameterPack 'get set' : 
    UInt32 Index 'get set' : 
    UInt32 Depth 'get set' : 
    CppSharp.Parser.AST.TypeTemplateParameter Parameter 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Parameter(): PrivateScope, Public, HideBySig, SpecialName
    set_Parameter(TypeTemplateParameter): PrivateScope, Public, HideBySig, SpecialName
    get_Depth(): PrivateScope, Public, HideBySig, SpecialName
    set_Depth(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_Index(): PrivateScope, Public, HideBySig, SpecialName
    set_Index(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_IsParameterPack(): PrivateScope, Public, HideBySig, SpecialName
    set_IsParameterPack(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.TemplateParameterSubstitutionType: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Type
    Void .ctor(CppSharp.Parser.AST.TemplateParameterSubstitutionType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.TemplateParameterSubstitutionType*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    CppSharp.Parser.AST.TemplateParameterType ReplacedParameter 'get set' : 
    CppSharp.Parser.AST.QualifiedType Replacement 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Replacement(): PrivateScope, Public, HideBySig, SpecialName
    set_Replacement(QualifiedType): PrivateScope, Public, HideBySig, SpecialName
    get_ReplacedParameter(): PrivateScope, Public, HideBySig, SpecialName
    set_ReplacedParameter(TemplateParameterType): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.InjectedClassNameType: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Type
    Void .ctor(CppSharp.Parser.AST.InjectedClassNameType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.InjectedClassNameType*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    CppSharp.Parser.AST.Class Class 'get set' : 
    CppSharp.Parser.AST.QualifiedType InjectedSpecializationType 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_InjectedSpecializationType(): PrivateScope, Public, HideBySig, SpecialName
    set_InjectedSpecializationType(QualifiedType): PrivateScope, Public, HideBySig, SpecialName
    get_Class(): PrivateScope, Public, HideBySig, SpecialName
    set_Class(Class): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.DependentNameType: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Type
    Void .ctor(CppSharp.Parser.AST.DependentNameType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.DependentNameType*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    CppSharp.Parser.AST.QualifiedType Desugared 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Desugared(): PrivateScope, Public, HideBySig, SpecialName
    set_Desugared(QualifiedType): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.PackExpansionType: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Type
    Void .ctor(CppSharp.Parser.AST.PackExpansionType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.PackExpansionType*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
Class CppSharp.Parser.AST.UnaryTransformType: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Type
    Void .ctor(CppSharp.Parser.AST.UnaryTransformType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.UnaryTransformType*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    CppSharp.Parser.AST.QualifiedType BaseType 'get set' : 
    CppSharp.Parser.AST.QualifiedType Desugared 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Desugared(): PrivateScope, Public, HideBySig, SpecialName
    set_Desugared(QualifiedType): PrivateScope, Public, HideBySig, SpecialName
    get_BaseType(): PrivateScope, Public, HideBySig, SpecialName
    set_BaseType(QualifiedType): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.VectorType: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Type
    Void .ctor(CppSharp.Parser.AST.VectorType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.VectorType*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    UInt32 NumElements 'get set' : 
    CppSharp.Parser.AST.QualifiedType ElementType 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_ElementType(): PrivateScope, Public, HideBySig, SpecialName
    set_ElementType(QualifiedType): PrivateScope, Public, HideBySig, SpecialName
    get_NumElements(): PrivateScope, Public, HideBySig, SpecialName
    set_NumElements(UInt32): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.BuiltinType: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Type
    Void .ctor(CppSharp.Parser.AST.BuiltinType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.BuiltinType*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    CppSharp.Parser.AST.PrimitiveType Type 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Type(): PrivateScope, Public, HideBySig, SpecialName
    set_Type(PrimitiveType): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.VTableComponent: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(CppSharp.Parser.AST.VTableComponent): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.VTableComponent*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    ICppInstance
    System.IDisposable
  Properties:
    CppSharp.Parser.AST.Declaration Declaration 'get set' : 
    UInt32 Offset 'get set' : 
    CppSharp.Parser.AST.VTableComponentKind Kind 'get set' : 
    IntPtr __Instance 'get set' : 
    CppSharp.CppParser.AST.VTableComponent* NativePtr 'get set' : 
  Methods:
    get_NativePtr(): PrivateScope, Public, HideBySig, SpecialName
    set_NativePtr(VTableComponent*): PrivateScope, Public, HideBySig, SpecialName
    get___Instance(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set___Instance(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Kind(): PrivateScope, Public, HideBySig, SpecialName
    set_Kind(VTableComponentKind): PrivateScope, Public, HideBySig, SpecialName
    get_Offset(): PrivateScope, Public, HideBySig, SpecialName
    set_Offset(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_Declaration(): PrivateScope, Public, HideBySig, SpecialName
    set_Declaration(Declaration): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class CppSharp.Parser.AST.VTableLayout: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(CppSharp.Parser.AST.VTableLayout): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.VTableLayout*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    ICppInstance
    System.IDisposable
  Properties:
    UInt32 ComponentsCount 'get ' : 
    IntPtr __Instance 'get set' : 
    CppSharp.CppParser.AST.VTableLayout* NativePtr 'get set' : 
  Methods:
    get_NativePtr(): PrivateScope, Public, HideBySig, SpecialName
    set_NativePtr(VTableLayout*): PrivateScope, Public, HideBySig, SpecialName
    get___Instance(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set___Instance(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_ComponentsCount(): PrivateScope, Public, HideBySig, SpecialName
    GetComponents(UInt32): PrivateScope, Public, HideBySig
    AddComponents(VTableComponent): PrivateScope, Public, HideBySig
    ClearComponents(): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class CppSharp.Parser.AST.VFTableInfo: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(CppSharp.Parser.AST.VFTableInfo): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.VFTableInfo*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    ICppInstance
    System.IDisposable
  Properties:
    CppSharp.Parser.AST.VTableLayout Layout 'get set' : 
    UInt32 VFPtrFullOffset 'get set' : 
    UInt32 VFPtrOffset 'get set' : 
    UInt64 VBTableIndex 'get set' : 
    IntPtr __Instance 'get set' : 
    CppSharp.CppParser.AST.VFTableInfo* NativePtr 'get set' : 
  Methods:
    get_NativePtr(): PrivateScope, Public, HideBySig, SpecialName
    set_NativePtr(VFTableInfo*): PrivateScope, Public, HideBySig, SpecialName
    get___Instance(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set___Instance(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_VBTableIndex(): PrivateScope, Public, HideBySig, SpecialName
    set_VBTableIndex(UInt64): PrivateScope, Public, HideBySig, SpecialName
    get_VFPtrOffset(): PrivateScope, Public, HideBySig, SpecialName
    set_VFPtrOffset(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_VFPtrFullOffset(): PrivateScope, Public, HideBySig, SpecialName
    set_VFPtrFullOffset(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_Layout(): PrivateScope, Public, HideBySig, SpecialName
    set_Layout(VTableLayout): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class CppSharp.Parser.AST.LayoutField: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(CppSharp.Parser.AST.LayoutField): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.LayoutField*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    ICppInstance
    System.IDisposable
  Properties:
    System.String Name 'get set' : 
    IntPtr FieldPtr 'get set' : 
    CppSharp.Parser.AST.QualifiedType QualifiedType 'get set' : 
    UInt32 Offset 'get set' : 
    IntPtr __Instance 'get set' : 
    CppSharp.CppParser.AST.LayoutField* NativePtr 'get set' : 
  Methods:
    get_NativePtr(): PrivateScope, Public, HideBySig, SpecialName
    set_NativePtr(LayoutField*): PrivateScope, Public, HideBySig, SpecialName
    get___Instance(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set___Instance(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Offset(): PrivateScope, Public, HideBySig, SpecialName
    set_Offset(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_QualifiedType(): PrivateScope, Public, HideBySig, SpecialName
    set_QualifiedType(QualifiedType): PrivateScope, Public, HideBySig, SpecialName
    get_FieldPtr(): PrivateScope, Public, HideBySig, SpecialName
    set_FieldPtr(IntPtr): PrivateScope, Public, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class CppSharp.Parser.AST.LayoutBase: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(CppSharp.Parser.AST.LayoutBase): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.LayoutBase*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    ICppInstance
    System.IDisposable
  Properties:
    CppSharp.Parser.AST.Class Class 'get set' : 
    UInt32 Offset 'get set' : 
    IntPtr __Instance 'get set' : 
    CppSharp.CppParser.AST.LayoutBase* NativePtr 'get set' : 
  Methods:
    get_NativePtr(): PrivateScope, Public, HideBySig, SpecialName
    set_NativePtr(LayoutBase*): PrivateScope, Public, HideBySig, SpecialName
    get___Instance(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set___Instance(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Offset(): PrivateScope, Public, HideBySig, SpecialName
    set_Offset(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_Class(): PrivateScope, Public, HideBySig, SpecialName
    set_Class(Class): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class CppSharp.Parser.AST.ClassLayout: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(CppSharp.Parser.AST.ClassLayout): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.ClassLayout*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    ICppInstance
    System.IDisposable
  Properties:
    UInt32 BasesCount 'get ' : 
    UInt32 FieldsCount 'get ' : 
    UInt32 VFTablesCount 'get ' : 
    Int32 DataSize 'get set' : 
    Int32 Size 'get set' : 
    Int32 Alignment 'get set' : 
    Int32 VBPtrOffset 'get set' IsLong : 
    Boolean HasOwnVFPtr 'get set' : 
    CppSharp.Parser.AST.VTableLayout Layout 'get set' : 
    CppSharp.Parser.AST.CppAbi ABI 'get set' : 
    IntPtr __Instance 'get set' : 
    CppSharp.CppParser.AST.ClassLayout* NativePtr 'get set' : 
  Methods:
    get_NativePtr(): PrivateScope, Public, HideBySig, SpecialName
    set_NativePtr(ClassLayout*): PrivateScope, Public, HideBySig, SpecialName
    get___Instance(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set___Instance(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_ABI(): PrivateScope, Public, HideBySig, SpecialName
    set_ABI(CppAbi): PrivateScope, Public, HideBySig, SpecialName
    get_Layout(): PrivateScope, Public, HideBySig, SpecialName
    set_Layout(VTableLayout): PrivateScope, Public, HideBySig, SpecialName
    get_HasOwnVFPtr(): PrivateScope, Public, HideBySig, SpecialName
    set_HasOwnVFPtr(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_VBPtrOffset(): PrivateScope, Public, HideBySig, SpecialName
    set_VBPtrOffset(Int32 IsLong): PrivateScope, Public, HideBySig, SpecialName
    get_Alignment(): PrivateScope, Public, HideBySig, SpecialName
    set_Alignment(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Size(): PrivateScope, Public, HideBySig, SpecialName
    set_Size(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_DataSize(): PrivateScope, Public, HideBySig, SpecialName
    set_DataSize(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_VFTablesCount(): PrivateScope, Public, HideBySig, SpecialName
    get_FieldsCount(): PrivateScope, Public, HideBySig, SpecialName
    get_BasesCount(): PrivateScope, Public, HideBySig, SpecialName
    GetVFTables(UInt32): PrivateScope, Public, HideBySig
    AddVFTables(VFTableInfo): PrivateScope, Public, HideBySig
    ClearVFTables(): PrivateScope, Public, HideBySig
    GetFields(UInt32): PrivateScope, Public, HideBySig
    AddFields(LayoutField): PrivateScope, Public, HideBySig
    ClearFields(): PrivateScope, Public, HideBySig
    GetBases(UInt32): PrivateScope, Public, HideBySig
    AddBases(LayoutBase): PrivateScope, Public, HideBySig
    ClearBases(): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class CppSharp.Parser.AST.Declaration: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(CppSharp.Parser.AST.Declaration): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.Parser.AST.DeclarationKind): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.Declaration*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    ICppInstance
    System.IDisposable
  Properties:
    UInt32 RedeclarationsCount 'get ' : 
    UInt32 PreprocessedEntitiesCount 'get ' : 
    System.String DebugText 'get set' : 
    System.String USR 'get set' : 
    System.String Name 'get set' : 
    CppSharp.Parser.AST.RawComment Comment 'get set' : 
    IntPtr OriginalPtr 'get set' : 
    UInt32 DefinitionOrder 'get set' : 
    CppSharp.Parser.AST.Declaration CompleteDeclaration 'get set' : 
    Boolean IsImplicit 'get set' : 
    Boolean IsDependent 'get set' : 
    Boolean IsIncomplete 'get set' : 
    Int32 LineNumberEnd 'get set' : 
    Int32 LineNumberStart 'get set' : 
    CppSharp.Parser.SourceLocation Location 'get set' : 
    CppSharp.Parser.AST.DeclarationContext Namespace 'get set' : 
    CppSharp.Parser.AST.AccessSpecifier Access 'get set' : 
    CppSharp.Parser.AST.DeclarationKind Kind 'get set' : 
    IntPtr __Instance 'get set' : 
    CppSharp.CppParser.AST.Declaration* NativePtr 'get set' : 
  Methods:
    get_NativePtr(): PrivateScope, Public, HideBySig, SpecialName
    set_NativePtr(Declaration*): PrivateScope, Public, HideBySig, SpecialName
    get___Instance(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set___Instance(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Kind(): PrivateScope, Public, HideBySig, SpecialName
    set_Kind(DeclarationKind): PrivateScope, Public, HideBySig, SpecialName
    get_Access(): PrivateScope, Public, HideBySig, SpecialName
    set_Access(AccessSpecifier): PrivateScope, Public, HideBySig, SpecialName
    get_Namespace(): PrivateScope, Public, HideBySig, SpecialName
    set_Namespace(DeclarationContext): PrivateScope, Public, HideBySig, SpecialName
    get_Location(): PrivateScope, Public, HideBySig, SpecialName
    set_Location(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    get_LineNumberStart(): PrivateScope, Public, HideBySig, SpecialName
    set_LineNumberStart(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_LineNumberEnd(): PrivateScope, Public, HideBySig, SpecialName
    set_LineNumberEnd(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_IsIncomplete(): PrivateScope, Public, HideBySig, SpecialName
    set_IsIncomplete(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsDependent(): PrivateScope, Public, HideBySig, SpecialName
    set_IsDependent(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsImplicit(): PrivateScope, Public, HideBySig, SpecialName
    set_IsImplicit(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_CompleteDeclaration(): PrivateScope, Public, HideBySig, SpecialName
    set_CompleteDeclaration(Declaration): PrivateScope, Public, HideBySig, SpecialName
    get_DefinitionOrder(): PrivateScope, Public, HideBySig, SpecialName
    set_DefinitionOrder(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_OriginalPtr(): PrivateScope, Public, HideBySig, SpecialName
    set_OriginalPtr(IntPtr): PrivateScope, Public, HideBySig, SpecialName
    get_Comment(): PrivateScope, Public, HideBySig, SpecialName
    set_Comment(RawComment): PrivateScope, Public, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
    get_USR(): PrivateScope, Public, HideBySig, SpecialName
    set_USR(String): PrivateScope, Public, HideBySig, SpecialName
    get_DebugText(): PrivateScope, Public, HideBySig, SpecialName
    set_DebugText(String): PrivateScope, Public, HideBySig, SpecialName
    get_PreprocessedEntitiesCount(): PrivateScope, Public, HideBySig, SpecialName
    get_RedeclarationsCount(): PrivateScope, Public, HideBySig, SpecialName
    GetPreprocessedEntities(UInt32): PrivateScope, Public, HideBySig
    AddPreprocessedEntities(PreprocessedEntity): PrivateScope, Public, HideBySig
    ClearPreprocessedEntities(): PrivateScope, Public, HideBySig
    GetRedeclarations(UInt32): PrivateScope, Public, HideBySig
    AddRedeclarations(Declaration): PrivateScope, Public, HideBySig
    ClearRedeclarations(): PrivateScope, Public, HideBySig
    op_Implicit(DeclarationKind): PrivateScope, Public, Static, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class CppSharp.Parser.AST.DeclarationContext: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Declaration
    Void .ctor(CppSharp.Parser.AST.DeclarationContext): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.Parser.AST.DeclarationKind): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.DeclarationContext*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    UInt32 FriendsCount 'get ' : 
    UInt32 VariablesCount 'get ' : 
    UInt32 TypeAliasesCount 'get ' : 
    UInt32 TypedefsCount 'get ' : 
    UInt32 TemplatesCount 'get ' : 
    UInt32 ClassesCount 'get ' : 
    UInt32 FunctionsCount 'get ' : 
    UInt32 EnumsCount 'get ' : 
    UInt32 NamespacesCount 'get ' : 
    Boolean IsAnonymous 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_IsAnonymous(): PrivateScope, Public, HideBySig, SpecialName
    set_IsAnonymous(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_NamespacesCount(): PrivateScope, Public, HideBySig, SpecialName
    get_EnumsCount(): PrivateScope, Public, HideBySig, SpecialName
    get_FunctionsCount(): PrivateScope, Public, HideBySig, SpecialName
    get_ClassesCount(): PrivateScope, Public, HideBySig, SpecialName
    get_TemplatesCount(): PrivateScope, Public, HideBySig, SpecialName
    get_TypedefsCount(): PrivateScope, Public, HideBySig, SpecialName
    get_TypeAliasesCount(): PrivateScope, Public, HideBySig, SpecialName
    get_VariablesCount(): PrivateScope, Public, HideBySig, SpecialName
    get_FriendsCount(): PrivateScope, Public, HideBySig, SpecialName
    GetNamespaces(UInt32): PrivateScope, Public, HideBySig
    AddNamespaces(Namespace): PrivateScope, Public, HideBySig
    ClearNamespaces(): PrivateScope, Public, HideBySig
    GetEnums(UInt32): PrivateScope, Public, HideBySig
    AddEnums(Enumeration): PrivateScope, Public, HideBySig
    ClearEnums(): PrivateScope, Public, HideBySig
    GetFunctions(UInt32): PrivateScope, Public, HideBySig
    AddFunctions(Function): PrivateScope, Public, HideBySig
    ClearFunctions(): PrivateScope, Public, HideBySig
    GetClasses(UInt32): PrivateScope, Public, HideBySig
    AddClasses(Class): PrivateScope, Public, HideBySig
    ClearClasses(): PrivateScope, Public, HideBySig
    GetTemplates(UInt32): PrivateScope, Public, HideBySig
    AddTemplates(Template): PrivateScope, Public, HideBySig
    ClearTemplates(): PrivateScope, Public, HideBySig
    GetTypedefs(UInt32): PrivateScope, Public, HideBySig
    AddTypedefs(TypedefDecl): PrivateScope, Public, HideBySig
    ClearTypedefs(): PrivateScope, Public, HideBySig
    GetTypeAliases(UInt32): PrivateScope, Public, HideBySig
    AddTypeAliases(TypeAlias): PrivateScope, Public, HideBySig
    ClearTypeAliases(): PrivateScope, Public, HideBySig
    GetVariables(UInt32): PrivateScope, Public, HideBySig
    AddVariables(Variable): PrivateScope, Public, HideBySig
    ClearVariables(): PrivateScope, Public, HideBySig
    GetFriends(UInt32): PrivateScope, Public, HideBySig
    AddFriends(Friend): PrivateScope, Public, HideBySig
    ClearFriends(): PrivateScope, Public, HideBySig
    op_Implicit(DeclarationKind): PrivateScope, Public, Static, HideBySig, SpecialName
Class CppSharp.Parser.AST.TypedefNameDecl: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Declaration
    Void .ctor(CppSharp.Parser.AST.TypedefNameDecl): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.Parser.AST.DeclarationKind): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.TypedefNameDecl*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    CppSharp.Parser.AST.QualifiedType QualifiedType 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_QualifiedType(): PrivateScope, Public, HideBySig, SpecialName
    set_QualifiedType(QualifiedType): PrivateScope, Public, HideBySig, SpecialName
    op_Implicit(DeclarationKind): PrivateScope, Public, Static, HideBySig, SpecialName
Class CppSharp.Parser.AST.TypedefDecl: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.TypedefNameDecl
    Void .ctor(CppSharp.Parser.AST.TypedefDecl): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.TypedefDecl*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
Class CppSharp.Parser.AST.TypeAlias: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.TypedefNameDecl
    Void .ctor(CppSharp.Parser.AST.TypeAlias): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.TypeAlias*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    CppSharp.Parser.AST.TypeAliasTemplate DescribedAliasTemplate 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_DescribedAliasTemplate(): PrivateScope, Public, HideBySig, SpecialName
    set_DescribedAliasTemplate(TypeAliasTemplate): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.Friend: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Declaration
    Void .ctor(CppSharp.Parser.AST.Friend): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.Friend*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    CppSharp.Parser.AST.Declaration Declaration 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Declaration(): PrivateScope, Public, HideBySig, SpecialName
    set_Declaration(Declaration): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.Statement: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(CppSharp.Parser.AST.Statement): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.Statement*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    ICppInstance
    System.IDisposable
  Properties:
    System.String String 'get set' : 
    CppSharp.Parser.AST.Declaration Decl 'get set' : 
    CppSharp.Parser.AST.StatementClass Class 'get set' : 
    IntPtr __Instance 'get set' : 
    CppSharp.CppParser.AST.Statement* NativePtr 'get set' : 
  Methods:
    get_NativePtr(): PrivateScope, Public, HideBySig, SpecialName
    set_NativePtr(Statement*): PrivateScope, Public, HideBySig, SpecialName
    get___Instance(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set___Instance(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Class(): PrivateScope, Public, HideBySig, SpecialName
    set_Class(StatementClass): PrivateScope, Public, HideBySig, SpecialName
    get_Decl(): PrivateScope, Public, HideBySig, SpecialName
    set_Decl(Declaration): PrivateScope, Public, HideBySig, SpecialName
    get_String(): PrivateScope, Public, HideBySig, SpecialName
    set_String(String): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class CppSharp.Parser.AST.Expression: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Statement
    Void .ctor(CppSharp.Parser.AST.Expression): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.Expression*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
Class CppSharp.Parser.AST.BinaryOperator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Expression
    Void .ctor(CppSharp.Parser.AST.BinaryOperator): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.BinaryOperator*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String OpcodeStr 'get set' : 
    CppSharp.Parser.AST.Expression RHS 'get set' : 
    CppSharp.Parser.AST.Expression LHS 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_LHS(): PrivateScope, Public, HideBySig, SpecialName
    set_LHS(Expression): PrivateScope, Public, HideBySig, SpecialName
    get_RHS(): PrivateScope, Public, HideBySig, SpecialName
    set_RHS(Expression): PrivateScope, Public, HideBySig, SpecialName
    get_OpcodeStr(): PrivateScope, Public, HideBySig, SpecialName
    set_OpcodeStr(String): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.CallExpr: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Expression
    Void .ctor(CppSharp.Parser.AST.CallExpr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.CallExpr*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    UInt32 ArgumentsCount 'get ' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_ArgumentsCount(): PrivateScope, Public, HideBySig, SpecialName
    GetArguments(UInt32): PrivateScope, Public, HideBySig
    AddArguments(Expression): PrivateScope, Public, HideBySig
    ClearArguments(): PrivateScope, Public, HideBySig
Class CppSharp.Parser.AST.CXXConstructExpr: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Expression
    Void .ctor(CppSharp.Parser.AST.CXXConstructExpr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.CXXConstructExpr*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    UInt32 ArgumentsCount 'get ' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_ArgumentsCount(): PrivateScope, Public, HideBySig, SpecialName
    GetArguments(UInt32): PrivateScope, Public, HideBySig
    AddArguments(Expression): PrivateScope, Public, HideBySig
    ClearArguments(): PrivateScope, Public, HideBySig
Class CppSharp.Parser.AST.Parameter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Declaration
    Void .ctor(CppSharp.Parser.AST.Parameter): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.Parameter*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    CppSharp.Parser.AST.Expression DefaultArgument 'get set' : 
    UInt32 Index 'get set' : 
    Boolean HasDefaultValue 'get set' : 
    Boolean IsIndirect 'get set' : 
    CppSharp.Parser.AST.QualifiedType QualifiedType 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_QualifiedType(): PrivateScope, Public, HideBySig, SpecialName
    set_QualifiedType(QualifiedType): PrivateScope, Public, HideBySig, SpecialName
    get_IsIndirect(): PrivateScope, Public, HideBySig, SpecialName
    set_IsIndirect(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_HasDefaultValue(): PrivateScope, Public, HideBySig, SpecialName
    set_HasDefaultValue(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_Index(): PrivateScope, Public, HideBySig, SpecialName
    set_Index(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_DefaultArgument(): PrivateScope, Public, HideBySig, SpecialName
    set_DefaultArgument(Expression): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.Function: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Declaration
    Void .ctor(CppSharp.Parser.AST.Function): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.Function*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    UInt32 ParametersCount 'get ' : 
    System.String Body 'get set' : 
    System.String Signature 'get set' : 
    System.String Mangled 'get set' : 
    CppSharp.Parser.AST.QualifiedType QualifiedType 'get set' : 
    CppSharp.Parser.AST.Function InstantiatedFrom 'get set' : 
    CppSharp.Parser.AST.FunctionTemplateSpecialization SpecializationInfo 'get set' : 
    CppSharp.Parser.AST.CallingConvention CallingConvention 'get set' : 
    CppSharp.Parser.AST.CXXOperatorKind OperatorKind 'get set' : 
    CppSharp.Parser.AST.FriendKind FriendKind 'get set' : 
    Boolean IsDeleted 'get set' : 
    Boolean IsPure 'get set' : 
    Boolean IsInline 'get set' : 
    Boolean IsVariadic 'get set' : 
    Boolean IsConstExpr 'get set' : 
    Boolean HasThisReturn 'get set' : 
    Boolean IsReturnIndirect 'get set' : 
    CppSharp.Parser.AST.QualifiedType ReturnType 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_ReturnType(): PrivateScope, Public, HideBySig, SpecialName
    set_ReturnType(QualifiedType): PrivateScope, Public, HideBySig, SpecialName
    get_IsReturnIndirect(): PrivateScope, Public, HideBySig, SpecialName
    set_IsReturnIndirect(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_HasThisReturn(): PrivateScope, Public, HideBySig, SpecialName
    set_HasThisReturn(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsConstExpr(): PrivateScope, Public, HideBySig, SpecialName
    set_IsConstExpr(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsVariadic(): PrivateScope, Public, HideBySig, SpecialName
    set_IsVariadic(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsInline(): PrivateScope, Public, HideBySig, SpecialName
    set_IsInline(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsPure(): PrivateScope, Public, HideBySig, SpecialName
    set_IsPure(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsDeleted(): PrivateScope, Public, HideBySig, SpecialName
    set_IsDeleted(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_FriendKind(): PrivateScope, Public, HideBySig, SpecialName
    set_FriendKind(FriendKind): PrivateScope, Public, HideBySig, SpecialName
    get_OperatorKind(): PrivateScope, Public, HideBySig, SpecialName
    set_OperatorKind(CXXOperatorKind): PrivateScope, Public, HideBySig, SpecialName
    get_CallingConvention(): PrivateScope, Public, HideBySig, SpecialName
    set_CallingConvention(CallingConvention): PrivateScope, Public, HideBySig, SpecialName
    get_SpecializationInfo(): PrivateScope, Public, HideBySig, SpecialName
    set_SpecializationInfo(FunctionTemplateSpecialization): PrivateScope, Public, HideBySig, SpecialName
    get_InstantiatedFrom(): PrivateScope, Public, HideBySig, SpecialName
    set_InstantiatedFrom(Function): PrivateScope, Public, HideBySig, SpecialName
    get_QualifiedType(): PrivateScope, Public, HideBySig, SpecialName
    set_QualifiedType(QualifiedType): PrivateScope, Public, HideBySig, SpecialName
    get_Mangled(): PrivateScope, Public, HideBySig, SpecialName
    set_Mangled(String): PrivateScope, Public, HideBySig, SpecialName
    get_Signature(): PrivateScope, Public, HideBySig, SpecialName
    set_Signature(String): PrivateScope, Public, HideBySig, SpecialName
    get_Body(): PrivateScope, Public, HideBySig, SpecialName
    set_Body(String): PrivateScope, Public, HideBySig, SpecialName
    get_ParametersCount(): PrivateScope, Public, HideBySig, SpecialName
    GetParameters(UInt32): PrivateScope, Public, HideBySig
    AddParameters(Parameter): PrivateScope, Public, HideBySig
    ClearParameters(): PrivateScope, Public, HideBySig
Class CppSharp.Parser.AST.Method: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Function
    Void .ctor(CppSharp.Parser.AST.Method): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.Method*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    CppSharp.Parser.AST.RefQualifierKind RefQualifier 'get set' : 
    CppSharp.Parser.AST.QualifiedType ConversionType 'get set' : 
    Boolean IsMoveConstructor 'get set' : 
    Boolean IsCopyConstructor 'get set' : 
    Boolean IsDefaultConstructor 'get set' : 
    CppSharp.Parser.AST.CXXMethodKind MethodKind 'get set' : 
    Boolean IsOverride 'get set' : 
    Boolean IsExplicit 'get set' : 
    Boolean IsConst 'get set' : 
    Boolean IsStatic 'get set' : 
    Boolean IsVirtual 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_IsVirtual(): PrivateScope, Public, HideBySig, SpecialName
    set_IsVirtual(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsStatic(): PrivateScope, Public, HideBySig, SpecialName
    set_IsStatic(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsConst(): PrivateScope, Public, HideBySig, SpecialName
    set_IsConst(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsExplicit(): PrivateScope, Public, HideBySig, SpecialName
    set_IsExplicit(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsOverride(): PrivateScope, Public, HideBySig, SpecialName
    set_IsOverride(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_MethodKind(): PrivateScope, Public, HideBySig, SpecialName
    set_MethodKind(CXXMethodKind): PrivateScope, Public, HideBySig, SpecialName
    get_IsDefaultConstructor(): PrivateScope, Public, HideBySig, SpecialName
    set_IsDefaultConstructor(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsCopyConstructor(): PrivateScope, Public, HideBySig, SpecialName
    set_IsCopyConstructor(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsMoveConstructor(): PrivateScope, Public, HideBySig, SpecialName
    set_IsMoveConstructor(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_ConversionType(): PrivateScope, Public, HideBySig, SpecialName
    set_ConversionType(QualifiedType): PrivateScope, Public, HideBySig, SpecialName
    get_RefQualifier(): PrivateScope, Public, HideBySig, SpecialName
    set_RefQualifier(RefQualifierKind): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.Enumeration: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.DeclarationContext
    Void .ctor(CppSharp.Parser.AST.Enumeration): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.Enumeration*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    UInt32 ItemsCount 'get ' : 
    CppSharp.Parser.AST.BuiltinType BuiltinType 'get set' : 
    CppSharp.Parser.AST.Type Type 'get set' : 
    EnumModifiers Modifiers 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Modifiers(): PrivateScope, Public, HideBySig, SpecialName
    set_Modifiers(EnumModifiers): PrivateScope, Public, HideBySig, SpecialName
    get_Type(): PrivateScope, Public, HideBySig, SpecialName
    set_Type(Type): PrivateScope, Public, HideBySig, SpecialName
    get_BuiltinType(): PrivateScope, Public, HideBySig, SpecialName
    set_BuiltinType(BuiltinType): PrivateScope, Public, HideBySig, SpecialName
    get_ItemsCount(): PrivateScope, Public, HideBySig, SpecialName
    GetItems(UInt32): PrivateScope, Public, HideBySig
    AddItems(Item): PrivateScope, Public, HideBySig
    ClearItems(): PrivateScope, Public, HideBySig
Struct CppSharp.Parser.AST.Enumeration+EnumModifiers: AutoLayout, AnsiClass, Class, NestedPublic, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    EnumModifiers Anonymous = 1 : Public, Static, Literal, HasDefault
    EnumModifiers Scoped = 2 : Public, Static, Literal, HasDefault
    EnumModifiers Flags = 4 : Public, Static, Literal, HasDefault
Class CppSharp.Parser.AST.Enumeration+Item: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :CppSharp.Parser.AST.Declaration
    Void .ctor(Item): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Item*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Expression 'get set' : 
    UInt64 Value 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    set_Value(UInt64): PrivateScope, Public, HideBySig, SpecialName
    get_Expression(): PrivateScope, Public, HideBySig, SpecialName
    set_Expression(String): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.Variable: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Declaration
    Void .ctor(CppSharp.Parser.AST.Variable): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.Variable*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Mangled 'get set' : 
    CppSharp.Parser.AST.QualifiedType QualifiedType 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_QualifiedType(): PrivateScope, Public, HideBySig, SpecialName
    set_QualifiedType(QualifiedType): PrivateScope, Public, HideBySig, SpecialName
    get_Mangled(): PrivateScope, Public, HideBySig, SpecialName
    set_Mangled(String): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.BaseClassSpecifier: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(CppSharp.Parser.AST.BaseClassSpecifier): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.BaseClassSpecifier*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    ICppInstance
    System.IDisposable
  Properties:
    Int32 Offset 'get set' : 
    CppSharp.Parser.AST.Type Type 'get set' : 
    Boolean IsVirtual 'get set' : 
    CppSharp.Parser.AST.AccessSpecifier Access 'get set' : 
    IntPtr __Instance 'get set' : 
    CppSharp.CppParser.AST.BaseClassSpecifier* NativePtr 'get set' : 
  Methods:
    get_NativePtr(): PrivateScope, Public, HideBySig, SpecialName
    set_NativePtr(BaseClassSpecifier*): PrivateScope, Public, HideBySig, SpecialName
    get___Instance(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set___Instance(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Access(): PrivateScope, Public, HideBySig, SpecialName
    set_Access(AccessSpecifier): PrivateScope, Public, HideBySig, SpecialName
    get_IsVirtual(): PrivateScope, Public, HideBySig, SpecialName
    set_IsVirtual(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_Type(): PrivateScope, Public, HideBySig, SpecialName
    set_Type(Type): PrivateScope, Public, HideBySig, SpecialName
    get_Offset(): PrivateScope, Public, HideBySig, SpecialName
    set_Offset(Int32): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class CppSharp.Parser.AST.Field: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Declaration
    Void .ctor(CppSharp.Parser.AST.Field): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.Field*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    UInt32 BitWidth 'get set' : 
    Boolean IsBitField 'get set' : 
    CppSharp.Parser.AST.Class Class 'get set' : 
    CppSharp.Parser.AST.QualifiedType QualifiedType 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_QualifiedType(): PrivateScope, Public, HideBySig, SpecialName
    set_QualifiedType(QualifiedType): PrivateScope, Public, HideBySig, SpecialName
    get_Class(): PrivateScope, Public, HideBySig, SpecialName
    set_Class(Class): PrivateScope, Public, HideBySig, SpecialName
    get_IsBitField(): PrivateScope, Public, HideBySig, SpecialName
    set_IsBitField(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_BitWidth(): PrivateScope, Public, HideBySig, SpecialName
    set_BitWidth(UInt32): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.AccessSpecifierDecl: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Declaration
    Void .ctor(CppSharp.Parser.AST.AccessSpecifierDecl): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.AccessSpecifierDecl*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
Class CppSharp.Parser.AST.Class: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.DeclarationContext
    Void .ctor(CppSharp.Parser.AST.Class): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.Class*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    UInt32 SpecifiersCount 'get ' : 
    UInt32 MethodsCount 'get ' : 
    UInt32 FieldsCount 'get ' : 
    UInt32 BasesCount 'get ' : 
    CppSharp.Parser.AST.ClassLayout Layout 'get set' : 
    Boolean IsInjected 'get set' : 
    Boolean IsExternCContext 'get set' : 
    Boolean HasNonTrivialDestructor 'get set' : 
    Boolean HasNonTrivialCopyConstructor 'get set' : 
    Boolean HasNonTrivialDefaultConstructor 'get set' : 
    Boolean IsPolymorphic 'get set' : 
    Boolean IsDynamic 'get set' : 
    Boolean IsUnion 'get set' : 
    Boolean IsAbstract 'get set' : 
    Boolean IsPOD 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_IsPOD(): PrivateScope, Public, HideBySig, SpecialName
    set_IsPOD(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsAbstract(): PrivateScope, Public, HideBySig, SpecialName
    set_IsAbstract(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsUnion(): PrivateScope, Public, HideBySig, SpecialName
    set_IsUnion(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsDynamic(): PrivateScope, Public, HideBySig, SpecialName
    set_IsDynamic(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsPolymorphic(): PrivateScope, Public, HideBySig, SpecialName
    set_IsPolymorphic(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_HasNonTrivialDefaultConstructor(): PrivateScope, Public, HideBySig, SpecialName
    set_HasNonTrivialDefaultConstructor(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_HasNonTrivialCopyConstructor(): PrivateScope, Public, HideBySig, SpecialName
    set_HasNonTrivialCopyConstructor(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_HasNonTrivialDestructor(): PrivateScope, Public, HideBySig, SpecialName
    set_HasNonTrivialDestructor(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsExternCContext(): PrivateScope, Public, HideBySig, SpecialName
    set_IsExternCContext(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsInjected(): PrivateScope, Public, HideBySig, SpecialName
    set_IsInjected(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_Layout(): PrivateScope, Public, HideBySig, SpecialName
    set_Layout(ClassLayout): PrivateScope, Public, HideBySig, SpecialName
    get_BasesCount(): PrivateScope, Public, HideBySig, SpecialName
    get_FieldsCount(): PrivateScope, Public, HideBySig, SpecialName
    get_MethodsCount(): PrivateScope, Public, HideBySig, SpecialName
    get_SpecifiersCount(): PrivateScope, Public, HideBySig, SpecialName
    GetBases(UInt32): PrivateScope, Public, HideBySig
    AddBases(BaseClassSpecifier): PrivateScope, Public, HideBySig
    ClearBases(): PrivateScope, Public, HideBySig
    GetFields(UInt32): PrivateScope, Public, HideBySig
    AddFields(Field): PrivateScope, Public, HideBySig
    ClearFields(): PrivateScope, Public, HideBySig
    GetMethods(UInt32): PrivateScope, Public, HideBySig
    AddMethods(Method): PrivateScope, Public, HideBySig
    ClearMethods(): PrivateScope, Public, HideBySig
    GetSpecifiers(UInt32): PrivateScope, Public, HideBySig
    AddSpecifiers(AccessSpecifierDecl): PrivateScope, Public, HideBySig
    ClearSpecifiers(): PrivateScope, Public, HideBySig
Class CppSharp.Parser.AST.Template: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Declaration
    Void .ctor(CppSharp.Parser.AST.Template): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.Parser.AST.DeclarationKind): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.Template*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    UInt32 ParametersCount 'get ' : 
    CppSharp.Parser.AST.Declaration TemplatedDecl 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_TemplatedDecl(): PrivateScope, Public, HideBySig, SpecialName
    set_TemplatedDecl(Declaration): PrivateScope, Public, HideBySig, SpecialName
    get_ParametersCount(): PrivateScope, Public, HideBySig, SpecialName
    GetParameters(UInt32): PrivateScope, Public, HideBySig
    AddParameters(Declaration): PrivateScope, Public, HideBySig
    ClearParameters(): PrivateScope, Public, HideBySig
    op_Implicit(DeclarationKind): PrivateScope, Public, Static, HideBySig, SpecialName
Class CppSharp.Parser.AST.TypeAliasTemplate: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Template
    Void .ctor(CppSharp.Parser.AST.TypeAliasTemplate): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.TypeAliasTemplate*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
Class CppSharp.Parser.AST.TemplateParameter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Declaration
    Void .ctor(CppSharp.Parser.AST.TemplateParameter): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.Parser.AST.DeclarationKind): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.TemplateParameter*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsParameterPack 'get set' : 
    UInt32 Index 'get set' : 
    UInt32 Depth 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Depth(): PrivateScope, Public, HideBySig, SpecialName
    set_Depth(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_Index(): PrivateScope, Public, HideBySig, SpecialName
    set_Index(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_IsParameterPack(): PrivateScope, Public, HideBySig, SpecialName
    set_IsParameterPack(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    op_Implicit(DeclarationKind): PrivateScope, Public, Static, HideBySig, SpecialName
Class CppSharp.Parser.AST.TemplateTemplateParameter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Template
    Void .ctor(CppSharp.Parser.AST.TemplateTemplateParameter): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.TemplateTemplateParameter*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsExpandedParameterPack 'get set' : 
    Boolean IsPackExpansion 'get set' : 
    Boolean IsParameterPack 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_IsParameterPack(): PrivateScope, Public, HideBySig, SpecialName
    set_IsParameterPack(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsPackExpansion(): PrivateScope, Public, HideBySig, SpecialName
    set_IsPackExpansion(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsExpandedParameterPack(): PrivateScope, Public, HideBySig, SpecialName
    set_IsExpandedParameterPack(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.TypeTemplateParameter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.TemplateParameter
    Void .ctor(CppSharp.Parser.AST.TypeTemplateParameter): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.TypeTemplateParameter*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    CppSharp.Parser.AST.QualifiedType DefaultArgument 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_DefaultArgument(): PrivateScope, Public, HideBySig, SpecialName
    set_DefaultArgument(QualifiedType): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.NonTypeTemplateParameter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.TemplateParameter
    Void .ctor(CppSharp.Parser.AST.NonTypeTemplateParameter): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.NonTypeTemplateParameter*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsExpandedParameterPack 'get set' : 
    Boolean IsPackExpansion 'get set' : 
    UInt32 Position 'get set' : 
    CppSharp.Parser.AST.Expression DefaultArgument 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_DefaultArgument(): PrivateScope, Public, HideBySig, SpecialName
    set_DefaultArgument(Expression): PrivateScope, Public, HideBySig, SpecialName
    get_Position(): PrivateScope, Public, HideBySig, SpecialName
    set_Position(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_IsPackExpansion(): PrivateScope, Public, HideBySig, SpecialName
    set_IsPackExpansion(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsExpandedParameterPack(): PrivateScope, Public, HideBySig, SpecialName
    set_IsExpandedParameterPack(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.ClassTemplate: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Template
    Void .ctor(CppSharp.Parser.AST.ClassTemplate): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.ClassTemplate*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    UInt32 SpecializationsCount 'get ' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_SpecializationsCount(): PrivateScope, Public, HideBySig, SpecialName
    GetSpecializations(UInt32): PrivateScope, Public, HideBySig
    AddSpecializations(ClassTemplateSpecialization): PrivateScope, Public, HideBySig
    ClearSpecializations(): PrivateScope, Public, HideBySig
Class CppSharp.Parser.AST.ClassTemplateSpecialization: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Class
    Void .ctor(CppSharp.Parser.AST.ClassTemplateSpecialization): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.ClassTemplateSpecialization*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    UInt32 ArgumentsCount 'get ' : 
    CppSharp.Parser.AST.TemplateSpecializationKind SpecializationKind 'get set' : 
    CppSharp.Parser.AST.ClassTemplate TemplatedDecl 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_TemplatedDecl(): PrivateScope, Public, HideBySig, SpecialName
    set_TemplatedDecl(ClassTemplate): PrivateScope, Public, HideBySig, SpecialName
    get_SpecializationKind(): PrivateScope, Public, HideBySig, SpecialName
    set_SpecializationKind(TemplateSpecializationKind): PrivateScope, Public, HideBySig, SpecialName
    get_ArgumentsCount(): PrivateScope, Public, HideBySig, SpecialName
    GetArguments(UInt32): PrivateScope, Public, HideBySig
    AddArguments(TemplateArgument): PrivateScope, Public, HideBySig
    ClearArguments(): PrivateScope, Public, HideBySig
Class CppSharp.Parser.AST.ClassTemplatePartialSpecialization: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.ClassTemplateSpecialization
    Void .ctor(CppSharp.Parser.AST.ClassTemplatePartialSpecialization): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.ClassTemplatePartialSpecialization*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
Class CppSharp.Parser.AST.FunctionTemplate: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Template
    Void .ctor(CppSharp.Parser.AST.FunctionTemplate): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.FunctionTemplate*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    UInt32 SpecializationsCount 'get ' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_SpecializationsCount(): PrivateScope, Public, HideBySig, SpecialName
    GetSpecializations(UInt32): PrivateScope, Public, HideBySig
    AddSpecializations(FunctionTemplateSpecialization): PrivateScope, Public, HideBySig
    ClearSpecializations(): PrivateScope, Public, HideBySig
Class CppSharp.Parser.AST.FunctionTemplateSpecialization: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(CppSharp.Parser.AST.FunctionTemplateSpecialization): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.FunctionTemplateSpecialization*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    ICppInstance
    System.IDisposable
  Properties:
    UInt32 ArgumentsCount 'get ' : 
    CppSharp.Parser.AST.TemplateSpecializationKind SpecializationKind 'get set' : 
    CppSharp.Parser.AST.Function SpecializedFunction 'get set' : 
    CppSharp.Parser.AST.FunctionTemplate Template 'get set' : 
    IntPtr __Instance 'get set' : 
    CppSharp.CppParser.AST.FunctionTemplateSpecialization* NativePtr 'get set' : 
  Methods:
    get_NativePtr(): PrivateScope, Public, HideBySig, SpecialName
    set_NativePtr(FunctionTemplateSpecialization*): PrivateScope, Public, HideBySig, SpecialName
    get___Instance(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set___Instance(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Template(): PrivateScope, Public, HideBySig, SpecialName
    set_Template(FunctionTemplate): PrivateScope, Public, HideBySig, SpecialName
    get_SpecializedFunction(): PrivateScope, Public, HideBySig, SpecialName
    set_SpecializedFunction(Function): PrivateScope, Public, HideBySig, SpecialName
    get_SpecializationKind(): PrivateScope, Public, HideBySig, SpecialName
    set_SpecializationKind(TemplateSpecializationKind): PrivateScope, Public, HideBySig, SpecialName
    get_ArgumentsCount(): PrivateScope, Public, HideBySig, SpecialName
    GetArguments(UInt32): PrivateScope, Public, HideBySig
    AddArguments(TemplateArgument): PrivateScope, Public, HideBySig
    ClearArguments(): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class CppSharp.Parser.AST.VarTemplate: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Template
    Void .ctor(CppSharp.Parser.AST.VarTemplate): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.VarTemplate*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    UInt32 SpecializationsCount 'get ' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_SpecializationsCount(): PrivateScope, Public, HideBySig, SpecialName
    GetSpecializations(UInt32): PrivateScope, Public, HideBySig
    AddSpecializations(VarTemplateSpecialization): PrivateScope, Public, HideBySig
    ClearSpecializations(): PrivateScope, Public, HideBySig
Class CppSharp.Parser.AST.VarTemplateSpecialization: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Variable
    Void .ctor(CppSharp.Parser.AST.VarTemplateSpecialization): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.VarTemplateSpecialization*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    UInt32 ArgumentsCount 'get ' : 
    CppSharp.Parser.AST.TemplateSpecializationKind SpecializationKind 'get set' : 
    CppSharp.Parser.AST.VarTemplate TemplatedDecl 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_TemplatedDecl(): PrivateScope, Public, HideBySig, SpecialName
    set_TemplatedDecl(VarTemplate): PrivateScope, Public, HideBySig, SpecialName
    get_SpecializationKind(): PrivateScope, Public, HideBySig, SpecialName
    set_SpecializationKind(TemplateSpecializationKind): PrivateScope, Public, HideBySig, SpecialName
    get_ArgumentsCount(): PrivateScope, Public, HideBySig, SpecialName
    GetArguments(UInt32): PrivateScope, Public, HideBySig
    AddArguments(TemplateArgument): PrivateScope, Public, HideBySig
    ClearArguments(): PrivateScope, Public, HideBySig
Class CppSharp.Parser.AST.VarTemplatePartialSpecialization: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.VarTemplateSpecialization
    Void .ctor(CppSharp.Parser.AST.VarTemplatePartialSpecialization): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.VarTemplatePartialSpecialization*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
Class CppSharp.Parser.AST.Namespace: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.DeclarationContext
    Void .ctor(CppSharp.Parser.AST.Namespace): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.Namespace*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsInline 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_IsInline(): PrivateScope, Public, HideBySig, SpecialName
    set_IsInline(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.PreprocessedEntity: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(CppSharp.Parser.AST.PreprocessedEntity): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.PreprocessedEntity*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    ICppInstance
    System.IDisposable
  Properties:
    CppSharp.Parser.AST.DeclarationKind Kind 'get set' : 
    IntPtr OriginalPtr 'get set' : 
    CppSharp.Parser.AST.MacroLocation MacroLocation 'get set' : 
    IntPtr __Instance 'get set' : 
    CppSharp.CppParser.AST.PreprocessedEntity* NativePtr 'get set' : 
  Methods:
    get_NativePtr(): PrivateScope, Public, HideBySig, SpecialName
    set_NativePtr(PreprocessedEntity*): PrivateScope, Public, HideBySig, SpecialName
    get___Instance(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set___Instance(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_MacroLocation(): PrivateScope, Public, HideBySig, SpecialName
    set_MacroLocation(MacroLocation): PrivateScope, Public, HideBySig, SpecialName
    get_OriginalPtr(): PrivateScope, Public, HideBySig, SpecialName
    set_OriginalPtr(IntPtr): PrivateScope, Public, HideBySig, SpecialName
    get_Kind(): PrivateScope, Public, HideBySig, SpecialName
    set_Kind(DeclarationKind): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class CppSharp.Parser.AST.MacroDefinition: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.PreprocessedEntity
    Void .ctor(CppSharp.Parser.AST.MacroDefinition): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.MacroDefinition*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Expression 'get set' : 
    System.String Name 'get set' : 
    Int32 LineNumberEnd 'get set' : 
    Int32 LineNumberStart 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_LineNumberStart(): PrivateScope, Public, HideBySig, SpecialName
    set_LineNumberStart(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_LineNumberEnd(): PrivateScope, Public, HideBySig, SpecialName
    set_LineNumberEnd(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
    get_Expression(): PrivateScope, Public, HideBySig, SpecialName
    set_Expression(String): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.MacroExpansion: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.PreprocessedEntity
    Void .ctor(CppSharp.Parser.AST.MacroExpansion): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.MacroExpansion*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Text 'get set' : 
    System.String Name 'get set' : 
    CppSharp.Parser.AST.MacroDefinition Definition 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Definition(): PrivateScope, Public, HideBySig, SpecialName
    set_Definition(MacroDefinition): PrivateScope, Public, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
    get_Text(): PrivateScope, Public, HideBySig, SpecialName
    set_Text(String): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.TranslationUnit: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Namespace
    Void .ctor(CppSharp.Parser.AST.TranslationUnit): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.TranslationUnit*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    UInt32 MacrosCount 'get ' : 
    System.String FileName 'get set' : 
    Boolean IsSystemHeader 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_IsSystemHeader(): PrivateScope, Public, HideBySig, SpecialName
    set_IsSystemHeader(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_FileName(): PrivateScope, Public, HideBySig, SpecialName
    set_FileName(String): PrivateScope, Public, HideBySig, SpecialName
    get_MacrosCount(): PrivateScope, Public, HideBySig, SpecialName
    GetMacros(UInt32): PrivateScope, Public, HideBySig
    AddMacros(MacroDefinition): PrivateScope, Public, HideBySig
    ClearMacros(): PrivateScope, Public, HideBySig
Class CppSharp.Parser.AST.NativeLibrary: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(CppSharp.Parser.AST.NativeLibrary): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.NativeLibrary*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    ICppInstance
    System.IDisposable
  Properties:
    UInt32 DependenciesCount 'get ' : 
    UInt32 SymbolsCount 'get ' : 
    System.String FileName 'get set' : 
    CppSharp.Parser.AST.ArchType ArchType 'get set' : 
    IntPtr __Instance 'get set' : 
    CppSharp.CppParser.AST.NativeLibrary* NativePtr 'get set' : 
  Methods:
    get_NativePtr(): PrivateScope, Public, HideBySig, SpecialName
    set_NativePtr(NativeLibrary*): PrivateScope, Public, HideBySig, SpecialName
    get___Instance(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set___Instance(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_ArchType(): PrivateScope, Public, HideBySig, SpecialName
    set_ArchType(ArchType): PrivateScope, Public, HideBySig, SpecialName
    get_FileName(): PrivateScope, Public, HideBySig, SpecialName
    set_FileName(String): PrivateScope, Public, HideBySig, SpecialName
    get_SymbolsCount(): PrivateScope, Public, HideBySig, SpecialName
    get_DependenciesCount(): PrivateScope, Public, HideBySig, SpecialName
    GetSymbols(UInt32): PrivateScope, Public, HideBySig
    AddSymbols(String): PrivateScope, Public, HideBySig
    ClearSymbols(): PrivateScope, Public, HideBySig
    GetDependencies(UInt32): PrivateScope, Public, HideBySig
    AddDependencies(String): PrivateScope, Public, HideBySig
    ClearDependencies(): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class CppSharp.Parser.AST.ASTContext: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(CppSharp.Parser.AST.ASTContext): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.ASTContext*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    ICppInstance
    System.IDisposable
  Properties:
    UInt32 TranslationUnitsCount 'get ' : 
    IntPtr __Instance 'get set' : 
    CppSharp.CppParser.AST.ASTContext* NativePtr 'get set' : 
  Methods:
    get_NativePtr(): PrivateScope, Public, HideBySig, SpecialName
    set_NativePtr(ASTContext*): PrivateScope, Public, HideBySig, SpecialName
    get___Instance(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set___Instance(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_TranslationUnitsCount(): PrivateScope, Public, HideBySig, SpecialName
    GetTranslationUnits(UInt32): PrivateScope, Public, HideBySig
    AddTranslationUnits(TranslationUnit): PrivateScope, Public, HideBySig
    ClearTranslationUnits(): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class CppSharp.Parser.AST.Comment: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(CppSharp.Parser.AST.Comment): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.Parser.AST.CommentKind): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.Comment*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    ICppInstance
    System.IDisposable
  Properties:
    CppSharp.Parser.AST.CommentKind Kind 'get set' : 
    IntPtr __Instance 'get set' : 
    CppSharp.CppParser.AST.Comment* NativePtr 'get set' : 
  Methods:
    get_NativePtr(): PrivateScope, Public, HideBySig, SpecialName
    set_NativePtr(Comment*): PrivateScope, Public, HideBySig, SpecialName
    get___Instance(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set___Instance(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Kind(): PrivateScope, Public, HideBySig, SpecialName
    set_Kind(CommentKind): PrivateScope, Public, HideBySig, SpecialName
    op_Implicit(CommentKind): PrivateScope, Public, Static, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class CppSharp.Parser.AST.BlockContentComment: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Comment
    Void .ctor(CppSharp.Parser.AST.BlockContentComment): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.Parser.AST.CommentKind): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.BlockContentComment*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    op_Implicit(CommentKind): PrivateScope, Public, Static, HideBySig, SpecialName
Class CppSharp.Parser.AST.FullComment: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Comment
    Void .ctor(CppSharp.Parser.AST.FullComment): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.FullComment*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    UInt32 BlocksCount 'get ' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_BlocksCount(): PrivateScope, Public, HideBySig, SpecialName
    GetBlocks(UInt32): PrivateScope, Public, HideBySig
    AddBlocks(BlockContentComment): PrivateScope, Public, HideBySig
    ClearBlocks(): PrivateScope, Public, HideBySig
Class CppSharp.Parser.AST.InlineContentComment: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Comment
    Void .ctor(CppSharp.Parser.AST.InlineContentComment): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.Parser.AST.CommentKind): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.InlineContentComment*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean HasTrailingNewline 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_HasTrailingNewline(): PrivateScope, Public, HideBySig, SpecialName
    set_HasTrailingNewline(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    op_Implicit(CommentKind): PrivateScope, Public, Static, HideBySig, SpecialName
Class CppSharp.Parser.AST.ParagraphComment: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.BlockContentComment
    Void .ctor(CppSharp.Parser.AST.ParagraphComment): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.ParagraphComment*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    UInt32 ContentCount 'get ' : 
    Boolean IsWhitespace 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_IsWhitespace(): PrivateScope, Public, HideBySig, SpecialName
    set_IsWhitespace(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_ContentCount(): PrivateScope, Public, HideBySig, SpecialName
    GetContent(UInt32): PrivateScope, Public, HideBySig
    AddContent(InlineContentComment): PrivateScope, Public, HideBySig
    ClearContent(): PrivateScope, Public, HideBySig
Class CppSharp.Parser.AST.BlockCommandComment: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.BlockContentComment
    Void .ctor(CppSharp.Parser.AST.BlockCommandComment): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.Parser.AST.CommentKind): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.BlockCommandComment*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    UInt32 ArgumentsCount 'get ' : 
    CppSharp.Parser.AST.ParagraphComment ParagraphComment 'get set' : 
    UInt32 CommandId 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_CommandId(): PrivateScope, Public, HideBySig, SpecialName
    set_CommandId(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_ParagraphComment(): PrivateScope, Public, HideBySig, SpecialName
    set_ParagraphComment(ParagraphComment): PrivateScope, Public, HideBySig, SpecialName
    get_ArgumentsCount(): PrivateScope, Public, HideBySig, SpecialName
    GetArguments(UInt32): PrivateScope, Public, HideBySig
    AddArguments(Argument): PrivateScope, Public, HideBySig
    ClearArguments(): PrivateScope, Public, HideBySig
    op_Implicit(CommentKind): PrivateScope, Public, Static, HideBySig, SpecialName
Class CppSharp.Parser.AST.BlockCommandComment+Argument: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(Argument): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Argument*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    ICppInstance
    System.IDisposable
  Properties:
    System.String Text 'get set' : 
    IntPtr __Instance 'get set' : 
    Argument* NativePtr 'get set' : 
  Methods:
    get_NativePtr(): PrivateScope, Public, HideBySig, SpecialName
    set_NativePtr(Argument*): PrivateScope, Public, HideBySig, SpecialName
    get___Instance(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set___Instance(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Text(): PrivateScope, Public, HideBySig, SpecialName
    set_Text(String): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class CppSharp.Parser.AST.ParamCommandComment: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.BlockCommandComment
    Void .ctor(CppSharp.Parser.AST.ParamCommandComment): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.ParamCommandComment*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    UInt32 ParamIndex 'get set' : 
    PassDirection Direction 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Direction(): PrivateScope, Public, HideBySig, SpecialName
    set_Direction(PassDirection): PrivateScope, Public, HideBySig, SpecialName
    get_ParamIndex(): PrivateScope, Public, HideBySig, SpecialName
    set_ParamIndex(UInt32): PrivateScope, Public, HideBySig, SpecialName
Struct CppSharp.Parser.AST.ParamCommandComment+PassDirection: AutoLayout, AnsiClass, Class, NestedPublic, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    PassDirection In = 0 : Public, Static, Literal, HasDefault
    PassDirection Out = 1 : Public, Static, Literal, HasDefault
    PassDirection InOut = 2 : Public, Static, Literal, HasDefault
Class CppSharp.Parser.AST.TParamCommandComment: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.BlockCommandComment
    Void .ctor(CppSharp.Parser.AST.TParamCommandComment): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.TParamCommandComment*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    UInt32 PositionCount 'get ' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_PositionCount(): PrivateScope, Public, HideBySig, SpecialName
    GetPosition(UInt32): PrivateScope, Public, HideBySig
    AddPosition(UInt32&(In, Out)): PrivateScope, Public, HideBySig
    ClearPosition(): PrivateScope, Public, HideBySig
Class CppSharp.Parser.AST.VerbatimBlockLineComment: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Comment
    Void .ctor(CppSharp.Parser.AST.VerbatimBlockLineComment): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.VerbatimBlockLineComment*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Text 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Text(): PrivateScope, Public, HideBySig, SpecialName
    set_Text(String): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.VerbatimBlockComment: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.BlockCommandComment
    Void .ctor(CppSharp.Parser.AST.VerbatimBlockComment): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.VerbatimBlockComment*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    UInt32 LinesCount 'get ' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_LinesCount(): PrivateScope, Public, HideBySig, SpecialName
    GetLines(UInt32): PrivateScope, Public, HideBySig
    AddLines(VerbatimBlockLineComment): PrivateScope, Public, HideBySig
    ClearLines(): PrivateScope, Public, HideBySig
Class CppSharp.Parser.AST.VerbatimLineComment: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.BlockCommandComment
    Void .ctor(CppSharp.Parser.AST.VerbatimLineComment): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.VerbatimLineComment*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Text 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Text(): PrivateScope, Public, HideBySig, SpecialName
    set_Text(String): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.InlineCommandComment: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.InlineContentComment
    Void .ctor(CppSharp.Parser.AST.InlineCommandComment): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.InlineCommandComment*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    UInt32 ArgumentsCount 'get ' : 
    RenderKind CommentRenderKind 'get set' : 
    UInt32 CommandId 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_CommandId(): PrivateScope, Public, HideBySig, SpecialName
    set_CommandId(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_CommentRenderKind(): PrivateScope, Public, HideBySig, SpecialName
    set_CommentRenderKind(RenderKind): PrivateScope, Public, HideBySig, SpecialName
    get_ArgumentsCount(): PrivateScope, Public, HideBySig, SpecialName
    GetArguments(UInt32): PrivateScope, Public, HideBySig
    AddArguments(Argument): PrivateScope, Public, HideBySig
    ClearArguments(): PrivateScope, Public, HideBySig
Struct CppSharp.Parser.AST.InlineCommandComment+RenderKind: AutoLayout, AnsiClass, Class, NestedPublic, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    RenderKind RenderNormal = 0 : Public, Static, Literal, HasDefault
    RenderKind RenderBold = 1 : Public, Static, Literal, HasDefault
    RenderKind RenderMonospaced = 2 : Public, Static, Literal, HasDefault
    RenderKind RenderEmphasized = 3 : Public, Static, Literal, HasDefault
Class CppSharp.Parser.AST.InlineCommandComment+Argument: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(Argument): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Argument*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    ICppInstance
    System.IDisposable
  Properties:
    System.String Text 'get set' : 
    IntPtr __Instance 'get set' : 
    Argument* NativePtr 'get set' : 
  Methods:
    get_NativePtr(): PrivateScope, Public, HideBySig, SpecialName
    set_NativePtr(Argument*): PrivateScope, Public, HideBySig, SpecialName
    get___Instance(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set___Instance(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Text(): PrivateScope, Public, HideBySig, SpecialName
    set_Text(String): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class CppSharp.Parser.AST.HTMLTagComment: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.InlineContentComment
    Void .ctor(CppSharp.Parser.AST.HTMLTagComment): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.Parser.AST.CommentKind): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.HTMLTagComment*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    op_Implicit(CommentKind): PrivateScope, Public, Static, HideBySig, SpecialName
Class CppSharp.Parser.AST.HTMLStartTagComment: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.HTMLTagComment
    Void .ctor(CppSharp.Parser.AST.HTMLStartTagComment): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.HTMLStartTagComment*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    UInt32 AttributesCount 'get ' : 
    System.String TagName 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_TagName(): PrivateScope, Public, HideBySig, SpecialName
    set_TagName(String): PrivateScope, Public, HideBySig, SpecialName
    get_AttributesCount(): PrivateScope, Public, HideBySig, SpecialName
    GetAttributes(UInt32): PrivateScope, Public, HideBySig
    AddAttributes(Attribute): PrivateScope, Public, HideBySig
    ClearAttributes(): PrivateScope, Public, HideBySig
Class CppSharp.Parser.AST.HTMLStartTagComment+Attribute: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(Attribute): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Attribute*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    ICppInstance
    System.IDisposable
  Properties:
    System.String Value 'get set' : 
    System.String Name 'get set' : 
    IntPtr __Instance 'get set' : 
    Attribute* NativePtr 'get set' : 
  Methods:
    get_NativePtr(): PrivateScope, Public, HideBySig, SpecialName
    set_NativePtr(Attribute*): PrivateScope, Public, HideBySig, SpecialName
    get___Instance(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set___Instance(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    set_Value(String): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class CppSharp.Parser.AST.HTMLEndTagComment: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.HTMLTagComment
    Void .ctor(CppSharp.Parser.AST.HTMLEndTagComment): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.HTMLEndTagComment*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String TagName 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_TagName(): PrivateScope, Public, HideBySig, SpecialName
    set_TagName(String): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.TextComment: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.InlineContentComment
    Void .ctor(CppSharp.Parser.AST.TextComment): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.TextComment*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Text 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Text(): PrivateScope, Public, HideBySig, SpecialName
    set_Text(String): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.RawComment: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(CppSharp.Parser.AST.RawComment): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.RawComment*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    ICppInstance
    System.IDisposable
  Properties:
    System.String BriefText 'get set' : 
    System.String Text 'get set' : 
    CppSharp.Parser.AST.FullComment FullCommentBlock 'get set' : 
    CppSharp.Parser.AST.RawCommentKind Kind 'get set' : 
    IntPtr __Instance 'get set' : 
    CppSharp.CppParser.AST.RawComment* NativePtr 'get set' : 
  Methods:
    get_NativePtr(): PrivateScope, Public, HideBySig, SpecialName
    set_NativePtr(RawComment*): PrivateScope, Public, HideBySig, SpecialName
    get___Instance(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set___Instance(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Kind(): PrivateScope, Public, HideBySig, SpecialName
    set_Kind(RawCommentKind): PrivateScope, Public, HideBySig, SpecialName
    get_FullCommentBlock(): PrivateScope, Public, HideBySig, SpecialName
    set_FullCommentBlock(FullComment): PrivateScope, Public, HideBySig, SpecialName
    get_Text(): PrivateScope, Public, HideBySig, SpecialName
    set_Text(String): PrivateScope, Public, HideBySig, SpecialName
    get_BriefText(): PrivateScope, Public, HideBySig, SpecialName
    set_BriefText(String): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Struct CppSharp.Parser.AST.TypeKind: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    CppSharp.Parser.AST.TypeKind Tag = 0 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.TypeKind Array = 1 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.TypeKind Function = 2 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.TypeKind Pointer = 3 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.TypeKind MemberPointer = 4 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.TypeKind Typedef = 5 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.TypeKind Attributed = 6 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.TypeKind Decayed = 7 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.TypeKind TemplateSpecialization = 8 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.TypeKind DependentTemplateSpecialization = 9 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.TypeKind TemplateParameter = 10 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.TypeKind TemplateParameterSubstitution = 11 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.TypeKind InjectedClassName = 12 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.TypeKind DependentName = 13 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.TypeKind PackExpansion = 14 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.TypeKind Builtin = 15 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.TypeKind UnaryTransform = 16 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.TypeKind Vector = 17 : Public, Static, Literal, HasDefault
Struct CppSharp.Parser.AST.DeclarationKind: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    CppSharp.Parser.AST.DeclarationKind DeclarationContext = 0 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.DeclarationKind Typedef = 1 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.DeclarationKind TypeAlias = 2 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.DeclarationKind Parameter = 3 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.DeclarationKind Function = 4 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.DeclarationKind Method = 5 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.DeclarationKind Enumeration = 6 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.DeclarationKind EnumerationItem = 7 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.DeclarationKind Variable = 8 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.DeclarationKind Field = 9 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.DeclarationKind AccessSpecifier = 10 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.DeclarationKind Class = 11 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.DeclarationKind Template = 12 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.DeclarationKind TypeAliasTemplate = 13 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.DeclarationKind ClassTemplate = 14 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.DeclarationKind ClassTemplateSpecialization = 15 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.DeclarationKind ClassTemplatePartialSpecialization = 16 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.DeclarationKind FunctionTemplate = 17 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.DeclarationKind Namespace = 18 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.DeclarationKind PreprocessedEntity = 19 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.DeclarationKind MacroDefinition = 20 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.DeclarationKind MacroExpansion = 21 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.DeclarationKind TranslationUnit = 22 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.DeclarationKind Friend = 23 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.DeclarationKind TemplateTemplateParm = 24 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.DeclarationKind TemplateTypeParm = 25 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.DeclarationKind NonTypeTemplateParm = 26 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.DeclarationKind VarTemplate = 27 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.DeclarationKind VarTemplateSpecialization = 28 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.DeclarationKind VarTemplatePartialSpecialization = 29 : Public, Static, Literal, HasDefault
Struct CppSharp.Parser.AST.AccessSpecifier: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    CppSharp.Parser.AST.AccessSpecifier Private = 0 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.AccessSpecifier Protected = 1 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.AccessSpecifier Public = 2 : Public, Static, Literal, HasDefault
Struct CppSharp.Parser.AST.MacroLocation: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    CppSharp.Parser.AST.MacroLocation Unknown = 0 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.MacroLocation ClassHead = 1 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.MacroLocation ClassBody = 2 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.MacroLocation FunctionHead = 3 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.MacroLocation FunctionParameters = 4 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.MacroLocation FunctionBody = 5 : Public, Static, Literal, HasDefault
Struct CppSharp.Parser.AST.RawCommentKind: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    CppSharp.Parser.AST.RawCommentKind Invalid = 0 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.RawCommentKind OrdinaryBCPL = 1 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.RawCommentKind OrdinaryC = 2 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.RawCommentKind BCPLSlash = 3 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.RawCommentKind BCPLExcl = 4 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.RawCommentKind JavaDoc = 5 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.RawCommentKind Qt = 6 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.RawCommentKind Merged = 7 : Public, Static, Literal, HasDefault
Struct CppSharp.Parser.AST.CommentKind: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    CppSharp.Parser.AST.CommentKind FullComment = 0 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CommentKind BlockContentComment = 1 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CommentKind BlockCommandComment = 2 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CommentKind ParamCommandComment = 3 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CommentKind TParamCommandComment = 4 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CommentKind VerbatimBlockComment = 5 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CommentKind VerbatimLineComment = 6 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CommentKind ParagraphComment = 7 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CommentKind HTMLTagComment = 8 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CommentKind HTMLStartTagComment = 9 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CommentKind HTMLEndTagComment = 10 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CommentKind TextComment = 11 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CommentKind InlineContentComment = 12 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CommentKind InlineCommandComment = 13 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CommentKind VerbatimBlockLineComment = 14 : Public, Static, Literal, HasDefault
Struct CppSharp.Parser.AST.FriendKind: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    CppSharp.Parser.AST.FriendKind None = 0 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.FriendKind Declared = 1 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.FriendKind Undeclared = 2 : Public, Static, Literal, HasDefault
Struct CppSharp.Parser.AST.CXXOperatorKind: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    CppSharp.Parser.AST.CXXOperatorKind None = 0 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind New = 1 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind Delete = 2 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind ArrayNew = 3 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind ArrayDelete = 4 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind Plus = 5 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind Minus = 6 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind Star = 7 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind Slash = 8 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind Percent = 9 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind Caret = 10 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind Amp = 11 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind Pipe = 12 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind Tilde = 13 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind Exclaim = 14 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind Equal = 15 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind Less = 16 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind Greater = 17 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind PlusEqual = 18 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind MinusEqual = 19 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind StarEqual = 20 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind SlashEqual = 21 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind PercentEqual = 22 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind CaretEqual = 23 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind AmpEqual = 24 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind PipeEqual = 25 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind LessLess = 26 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind GreaterGreater = 27 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind LessLessEqual = 28 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind GreaterGreaterEqual = 29 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind EqualEqual = 30 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind ExclaimEqual = 31 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind LessEqual = 32 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind GreaterEqual = 33 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind AmpAmp = 34 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind PipePipe = 35 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind PlusPlus = 36 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind MinusMinus = 37 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind Comma = 38 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind ArrowStar = 39 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind Arrow = 40 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind Call = 41 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind Subscript = 42 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind Conditional = 43 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind Coawait = 44 : Public, Static, Literal, HasDefault
Struct CppSharp.Parser.AST.CallingConvention: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    CppSharp.Parser.AST.CallingConvention Default = 0 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CallingConvention C = 1 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CallingConvention StdCall = 2 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CallingConvention ThisCall = 3 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CallingConvention FastCall = 4 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CallingConvention Unknown = 5 : Public, Static, Literal, HasDefault
Struct CppSharp.Parser.AST.StatementClass: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    CppSharp.Parser.AST.StatementClass Any = 0 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StatementClass BinaryOperator = 1 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StatementClass CallExprClass = 2 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StatementClass DeclRefExprClass = 3 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StatementClass CXXConstructExprClass = 4 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StatementClass CXXOperatorCallExpr = 5 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StatementClass ImplicitCastExpr = 6 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StatementClass ExplicitCastExpr = 7 : Public, Static, Literal, HasDefault
Struct CppSharp.Parser.AST.TemplateSpecializationKind: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    CppSharp.Parser.AST.TemplateSpecializationKind Undeclared = 0 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.TemplateSpecializationKind ImplicitInstantiation = 1 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.TemplateSpecializationKind ExplicitSpecialization = 2 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.TemplateSpecializationKind ExplicitInstantiationDeclaration = 3 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.TemplateSpecializationKind ExplicitInstantiationDefinition = 4 : Public, Static, Literal, HasDefault
Struct CppSharp.Parser.AST.CXXMethodKind: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    CppSharp.Parser.AST.CXXMethodKind Normal = 0 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXMethodKind Constructor = 1 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXMethodKind Destructor = 2 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXMethodKind Conversion = 3 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXMethodKind Operator = 4 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXMethodKind UsingDirective = 5 : Public, Static, Literal, HasDefault
Struct CppSharp.Parser.AST.RefQualifierKind: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    CppSharp.Parser.AST.RefQualifierKind None = 0 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.RefQualifierKind LValue = 1 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.RefQualifierKind RValue = 2 : Public, Static, Literal, HasDefault
Struct CppSharp.Parser.AST.CppAbi: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    CppSharp.Parser.AST.CppAbi Itanium = 0 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CppAbi Microsoft = 1 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CppAbi ARM = 2 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CppAbi iOS = 3 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CppAbi iOS64 = 4 : Public, Static, Literal, HasDefault
Struct CppSharp.Parser.AST.VTableComponentKind: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    CppSharp.Parser.AST.VTableComponentKind VCallOffset = 0 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.VTableComponentKind VBaseOffset = 1 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.VTableComponentKind OffsetToTop = 2 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.VTableComponentKind RTTI = 3 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.VTableComponentKind FunctionPointer = 4 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.VTableComponentKind CompleteDtorPointer = 5 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.VTableComponentKind DeletingDtorPointer = 6 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.VTableComponentKind UnusedFunctionPointer = 7 : Public, Static, Literal, HasDefault
Struct CppSharp.Parser.AST.PrimitiveType: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    CppSharp.Parser.AST.PrimitiveType Null = 0 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.PrimitiveType Void = 1 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.PrimitiveType Bool = 2 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.PrimitiveType WideChar = 3 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.PrimitiveType Char = 4 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.PrimitiveType SChar = 5 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.PrimitiveType UChar = 6 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.PrimitiveType Char16 = 7 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.PrimitiveType Char32 = 8 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.PrimitiveType Short = 9 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.PrimitiveType UShort = 10 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.PrimitiveType Int = 11 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.PrimitiveType UInt = 12 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.PrimitiveType Long = 13 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.PrimitiveType ULong = 14 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.PrimitiveType LongLong = 15 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.PrimitiveType ULongLong = 16 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.PrimitiveType Int128 = 17 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.PrimitiveType UInt128 = 18 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.PrimitiveType Half = 19 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.PrimitiveType Float = 20 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.PrimitiveType Double = 21 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.PrimitiveType LongDouble = 22 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.PrimitiveType Float128 = 23 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.PrimitiveType IntPtr = 24 : Public, Static, Literal, HasDefault
Struct CppSharp.Parser.AST.ExceptionSpecType: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    CppSharp.Parser.AST.ExceptionSpecType None = 0 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.ExceptionSpecType DynamicNone = 1 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.ExceptionSpecType Dynamic = 2 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.ExceptionSpecType MSAny = 3 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.ExceptionSpecType BasicNoexcept = 4 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.ExceptionSpecType ComputedNoexcept = 5 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.ExceptionSpecType Unevaluated = 6 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.ExceptionSpecType Uninstantiated = 7 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.ExceptionSpecType Unparsed = 8 : Public, Static, Literal, HasDefault
Struct CppSharp.Parser.AST.ArchType: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    CppSharp.Parser.AST.ArchType UnknownArch = 0 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.ArchType X86 = 1 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.ArchType X86_64 = 2 : Public, Static, Literal, HasDefault
Class CppSharp.Parser.CppParserOptions: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(CppSharp.Parser.CppParserOptions): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.CppParserOptions*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    ICppInstance
    System.IDisposable
  Properties:
    UInt32 LibraryDirsCount 'get ' : 
    UInt32 UndefinesCount 'get ' : 
    UInt32 DefinesCount 'get ' : 
    UInt32 SystemIncludeDirsCount 'get ' : 
    UInt32 IncludeDirsCount 'get ' : 
    UInt32 SourceFilesCount 'get ' : 
    UInt32 ArgumentsCount 'get ' : 
    System.String TargetTriple 'get set' : 
    System.String LibraryFile 'get set' : 
    CppSharp.Parser.ParserTargetInfo TargetInfo 'get set' : 
    CppSharp.Parser.LanguageVersion LanguageVersion 'get set' : 
    Boolean Verbose 'get set' : 
    Boolean MicrosoftMode 'get set' : 
    Boolean NoBuiltinIncludes 'get set' : 
    Boolean NoStandardIncludes 'get set' : 
    CppSharp.Parser.AST.CppAbi Abi 'get set' : 
    Int32 ToolSetToUse 'get set' : 
    CppSharp.Parser.AST.ASTContext ASTContext 'get set' : 
    IntPtr __Instance 'get set' : 
    CppSharp.CppParser.CppParserOptions* NativePtr 'get set' : 
  Methods:
    get_NativePtr(): PrivateScope, Public, HideBySig, SpecialName
    set_NativePtr(CppParserOptions*): PrivateScope, Public, HideBySig, SpecialName
    get___Instance(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set___Instance(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_ASTContext(): PrivateScope, Public, HideBySig, SpecialName
    set_ASTContext(ASTContext): PrivateScope, Public, HideBySig, SpecialName
    get_ToolSetToUse(): PrivateScope, Public, HideBySig, SpecialName
    set_ToolSetToUse(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Abi(): PrivateScope, Public, HideBySig, SpecialName
    set_Abi(CppAbi): PrivateScope, Public, HideBySig, SpecialName
    get_NoStandardIncludes(): PrivateScope, Public, HideBySig, SpecialName
    set_NoStandardIncludes(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_NoBuiltinIncludes(): PrivateScope, Public, HideBySig, SpecialName
    set_NoBuiltinIncludes(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_MicrosoftMode(): PrivateScope, Public, HideBySig, SpecialName
    set_MicrosoftMode(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_Verbose(): PrivateScope, Public, HideBySig, SpecialName
    set_Verbose(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_LanguageVersion(): PrivateScope, Public, HideBySig, SpecialName
    set_LanguageVersion(LanguageVersion): PrivateScope, Public, HideBySig, SpecialName
    get_TargetInfo(): PrivateScope, Public, HideBySig, SpecialName
    set_TargetInfo(ParserTargetInfo): PrivateScope, Public, HideBySig, SpecialName
    get_LibraryFile(): PrivateScope, Public, HideBySig, SpecialName
    set_LibraryFile(String): PrivateScope, Public, HideBySig, SpecialName
    get_TargetTriple(): PrivateScope, Public, HideBySig, SpecialName
    set_TargetTriple(String): PrivateScope, Public, HideBySig, SpecialName
    get_ArgumentsCount(): PrivateScope, Public, HideBySig, SpecialName
    get_SourceFilesCount(): PrivateScope, Public, HideBySig, SpecialName
    get_IncludeDirsCount(): PrivateScope, Public, HideBySig, SpecialName
    get_SystemIncludeDirsCount(): PrivateScope, Public, HideBySig, SpecialName
    get_DefinesCount(): PrivateScope, Public, HideBySig, SpecialName
    get_UndefinesCount(): PrivateScope, Public, HideBySig, SpecialName
    get_LibraryDirsCount(): PrivateScope, Public, HideBySig, SpecialName
    GetArguments(UInt32): PrivateScope, Public, HideBySig
    AddArguments(String): PrivateScope, Public, HideBySig
    ClearArguments(): PrivateScope, Public, HideBySig
    GetSourceFiles(UInt32): PrivateScope, Public, HideBySig
    AddSourceFiles(String): PrivateScope, Public, HideBySig
    ClearSourceFiles(): PrivateScope, Public, HideBySig
    GetIncludeDirs(UInt32): PrivateScope, Public, HideBySig
    AddIncludeDirs(String): PrivateScope, Public, HideBySig
    ClearIncludeDirs(): PrivateScope, Public, HideBySig
    GetSystemIncludeDirs(UInt32): PrivateScope, Public, HideBySig
    AddSystemIncludeDirs(String): PrivateScope, Public, HideBySig
    ClearSystemIncludeDirs(): PrivateScope, Public, HideBySig
    GetDefines(UInt32): PrivateScope, Public, HideBySig
    AddDefines(String): PrivateScope, Public, HideBySig
    ClearDefines(): PrivateScope, Public, HideBySig
    GetUndefines(UInt32): PrivateScope, Public, HideBySig
    AddUndefines(String): PrivateScope, Public, HideBySig
    ClearUndefines(): PrivateScope, Public, HideBySig
    GetLibraryDirs(UInt32): PrivateScope, Public, HideBySig
    AddLibraryDirs(String): PrivateScope, Public, HideBySig
    ClearLibraryDirs(): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class CppSharp.Parser.ParserDiagnostic: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(CppSharp.Parser.ParserDiagnostic): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.ParserDiagnostic*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    ICppInstance
    System.IDisposable
  Properties:
    System.String Message 'get set' : 
    System.String FileName 'get set' : 
    Int32 ColumnNumber 'get set' : 
    Int32 LineNumber 'get set' : 
    CppSharp.Parser.ParserDiagnosticLevel Level 'get set' : 
    IntPtr __Instance 'get set' : 
    CppSharp.CppParser.ParserDiagnostic* NativePtr 'get set' : 
  Methods:
    get_NativePtr(): PrivateScope, Public, HideBySig, SpecialName
    set_NativePtr(ParserDiagnostic*): PrivateScope, Public, HideBySig, SpecialName
    get___Instance(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set___Instance(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Level(): PrivateScope, Public, HideBySig, SpecialName
    set_Level(ParserDiagnosticLevel): PrivateScope, Public, HideBySig, SpecialName
    get_LineNumber(): PrivateScope, Public, HideBySig, SpecialName
    set_LineNumber(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_ColumnNumber(): PrivateScope, Public, HideBySig, SpecialName
    set_ColumnNumber(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_FileName(): PrivateScope, Public, HideBySig, SpecialName
    set_FileName(String): PrivateScope, Public, HideBySig, SpecialName
    get_Message(): PrivateScope, Public, HideBySig, SpecialName
    set_Message(String): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class CppSharp.Parser.ParserResult: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(CppSharp.Parser.ParserResult): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.ParserResult*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    ICppInstance
    System.IDisposable
  Properties:
    UInt32 DiagnosticsCount 'get ' : 
    CppSharp.Parser.AST.NativeLibrary Library 'get set' : 
    CppSharp.Parser.AST.ASTContext ASTContext 'get set' : 
    CppSharp.Parser.ParserResultKind Kind 'get set' : 
    IntPtr __Instance 'get set' : 
    CppSharp.CppParser.ParserResult* NativePtr 'get set' : 
  Methods:
    get_NativePtr(): PrivateScope, Public, HideBySig, SpecialName
    set_NativePtr(ParserResult*): PrivateScope, Public, HideBySig, SpecialName
    get___Instance(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set___Instance(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Kind(): PrivateScope, Public, HideBySig, SpecialName
    set_Kind(ParserResultKind): PrivateScope, Public, HideBySig, SpecialName
    get_ASTContext(): PrivateScope, Public, HideBySig, SpecialName
    set_ASTContext(ASTContext): PrivateScope, Public, HideBySig, SpecialName
    get_Library(): PrivateScope, Public, HideBySig, SpecialName
    set_Library(NativeLibrary): PrivateScope, Public, HideBySig, SpecialName
    get_DiagnosticsCount(): PrivateScope, Public, HideBySig, SpecialName
    GetDiagnostics(UInt32): PrivateScope, Public, HideBySig
    AddDiagnostics(ParserDiagnostic): PrivateScope, Public, HideBySig
    ClearDiagnostics(): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class CppSharp.Parser.ClangParser: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(CppSharp.Parser.ClangParser): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.ClangParser*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    ICppInstance
    System.IDisposable
  Properties:
    IntPtr __Instance 'get set' : 
    CppSharp.CppParser.ClangParser* NativePtr 'get set' : 
  Methods:
    get_NativePtr(): PrivateScope, Public, HideBySig, SpecialName
    set_NativePtr(ClangParser*): PrivateScope, Public, HideBySig, SpecialName
    get___Instance(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set___Instance(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    ParseHeader(CppParserOptions): PrivateScope, Public, Static, HideBySig
    ParseLibrary(CppParserOptions): PrivateScope, Public, Static, HideBySig
    GetTargetInfo(CppParserOptions): PrivateScope, Public, Static, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class CppSharp.Parser.ParserTargetInfo: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(CppSharp.Parser.ParserTargetInfo): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.ParserTargetInfo*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    ICppInstance
    System.IDisposable
  Properties:
    System.String ABI 'get set' : 
    UInt32 WCharWidth 'get set' : 
    UInt32 WCharAlign 'get set' : 
    UInt32 PointerWidth 'get set' : 
    UInt32 PointerAlign 'get set' : 
    UInt32 LongLongWidth 'get set' : 
    UInt32 LongLongAlign 'get set' : 
    UInt32 LongDoubleWidth 'get set' : 
    UInt32 LongDoubleAlign 'get set' : 
    UInt32 LongWidth 'get set' : 
    UInt32 LongAlign 'get set' : 
    UInt32 IntMaxTWidth 'get set' : 
    UInt32 IntWidth 'get set' : 
    UInt32 IntAlign 'get set' : 
    UInt32 ShortWidth 'get set' : 
    UInt32 ShortAlign 'get set' : 
    UInt32 DoubleWidth 'get set' : 
    UInt32 DoubleAlign 'get set' : 
    UInt32 FloatWidth 'get set' : 
    UInt32 FloatAlign 'get set' : 
    UInt32 HalfWidth 'get set' : 
    UInt32 HalfAlign 'get set' : 
    UInt32 Char32Width 'get set' : 
    UInt32 Char32Align 'get set' : 
    UInt32 Char16Width 'get set' : 
    UInt32 Char16Align 'get set' : 
    UInt32 CharWidth 'get set' : 
    UInt32 CharAlign 'get set' : 
    UInt32 BoolWidth 'get set' : 
    UInt32 BoolAlign 'get set' : 
    CppSharp.Parser.ParserIntType WIntType 'get set' : 
    CppSharp.Parser.ParserIntType WCharType 'get set' : 
    CppSharp.Parser.ParserIntType UIntMaxType 'get set' : 
    CppSharp.Parser.ParserIntType SizeType 'get set' : 
    CppSharp.Parser.ParserIntType IntPtrType 'get set' : 
    CppSharp.Parser.ParserIntType IntMaxType 'get set' : 
    CppSharp.Parser.ParserIntType Int64Type 'get set' : 
    CppSharp.Parser.ParserIntType Char32Type 'get set' : 
    CppSharp.Parser.ParserIntType Char16Type 'get set' : 
    IntPtr __Instance 'get set' : 
    CppSharp.CppParser.ParserTargetInfo* NativePtr 'get set' : 
  Methods:
    set_ABI(String): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
    get_NativePtr(): PrivateScope, Public, HideBySig, SpecialName
    set_NativePtr(ParserTargetInfo*): PrivateScope, Public, HideBySig, SpecialName
    get___Instance(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set___Instance(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Char16Type(): PrivateScope, Public, HideBySig, SpecialName
    set_Char16Type(ParserIntType): PrivateScope, Public, HideBySig, SpecialName
    get_Char32Type(): PrivateScope, Public, HideBySig, SpecialName
    set_Char32Type(ParserIntType): PrivateScope, Public, HideBySig, SpecialName
    get_Int64Type(): PrivateScope, Public, HideBySig, SpecialName
    set_Int64Type(ParserIntType): PrivateScope, Public, HideBySig, SpecialName
    get_IntMaxType(): PrivateScope, Public, HideBySig, SpecialName
    set_IntMaxType(ParserIntType): PrivateScope, Public, HideBySig, SpecialName
    get_IntPtrType(): PrivateScope, Public, HideBySig, SpecialName
    set_IntPtrType(ParserIntType): PrivateScope, Public, HideBySig, SpecialName
    get_SizeType(): PrivateScope, Public, HideBySig, SpecialName
    set_SizeType(ParserIntType): PrivateScope, Public, HideBySig, SpecialName
    get_UIntMaxType(): PrivateScope, Public, HideBySig, SpecialName
    set_UIntMaxType(ParserIntType): PrivateScope, Public, HideBySig, SpecialName
    get_WCharType(): PrivateScope, Public, HideBySig, SpecialName
    set_WCharType(ParserIntType): PrivateScope, Public, HideBySig, SpecialName
    get_WIntType(): PrivateScope, Public, HideBySig, SpecialName
    set_WIntType(ParserIntType): PrivateScope, Public, HideBySig, SpecialName
    get_BoolAlign(): PrivateScope, Public, HideBySig, SpecialName
    set_BoolAlign(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_BoolWidth(): PrivateScope, Public, HideBySig, SpecialName
    set_BoolWidth(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_CharAlign(): PrivateScope, Public, HideBySig, SpecialName
    set_CharAlign(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_CharWidth(): PrivateScope, Public, HideBySig, SpecialName
    set_CharWidth(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_Char16Align(): PrivateScope, Public, HideBySig, SpecialName
    set_Char16Align(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_Char16Width(): PrivateScope, Public, HideBySig, SpecialName
    set_Char16Width(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_Char32Align(): PrivateScope, Public, HideBySig, SpecialName
    set_Char32Align(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_Char32Width(): PrivateScope, Public, HideBySig, SpecialName
    set_Char32Width(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_HalfAlign(): PrivateScope, Public, HideBySig, SpecialName
    set_HalfAlign(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_HalfWidth(): PrivateScope, Public, HideBySig, SpecialName
    set_HalfWidth(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_FloatAlign(): PrivateScope, Public, HideBySig, SpecialName
    set_FloatAlign(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_FloatWidth(): PrivateScope, Public, HideBySig, SpecialName
    set_FloatWidth(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_DoubleAlign(): PrivateScope, Public, HideBySig, SpecialName
    set_DoubleAlign(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_DoubleWidth(): PrivateScope, Public, HideBySig, SpecialName
    set_DoubleWidth(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_ShortAlign(): PrivateScope, Public, HideBySig, SpecialName
    set_ShortAlign(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_ShortWidth(): PrivateScope, Public, HideBySig, SpecialName
    set_ShortWidth(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_IntAlign(): PrivateScope, Public, HideBySig, SpecialName
    set_IntAlign(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_IntWidth(): PrivateScope, Public, HideBySig, SpecialName
    set_IntWidth(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_IntMaxTWidth(): PrivateScope, Public, HideBySig, SpecialName
    set_IntMaxTWidth(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_LongAlign(): PrivateScope, Public, HideBySig, SpecialName
    set_LongAlign(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_LongWidth(): PrivateScope, Public, HideBySig, SpecialName
    set_LongWidth(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_LongDoubleAlign(): PrivateScope, Public, HideBySig, SpecialName
    set_LongDoubleAlign(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_LongDoubleWidth(): PrivateScope, Public, HideBySig, SpecialName
    set_LongDoubleWidth(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_LongLongAlign(): PrivateScope, Public, HideBySig, SpecialName
    set_LongLongAlign(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_LongLongWidth(): PrivateScope, Public, HideBySig, SpecialName
    set_LongLongWidth(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_PointerAlign(): PrivateScope, Public, HideBySig, SpecialName
    set_PointerAlign(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_PointerWidth(): PrivateScope, Public, HideBySig, SpecialName
    set_PointerWidth(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_WCharAlign(): PrivateScope, Public, HideBySig, SpecialName
    set_WCharAlign(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_WCharWidth(): PrivateScope, Public, HideBySig, SpecialName
    set_WCharWidth(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_ABI(): PrivateScope, Public, HideBySig, SpecialName
Struct CppSharp.Parser.LanguageVersion: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    CppSharp.Parser.LanguageVersion C = 0 : Public, Static, Literal, HasDefault
    CppSharp.Parser.LanguageVersion GNUC = 1 : Public, Static, Literal, HasDefault
    CppSharp.Parser.LanguageVersion CPlusPlus98 = 2 : Public, Static, Literal, HasDefault
    CppSharp.Parser.LanguageVersion GNUPlusPlus98 = 3 : Public, Static, Literal, HasDefault
    CppSharp.Parser.LanguageVersion CPlusPlus11 = 4 : Public, Static, Literal, HasDefault
    CppSharp.Parser.LanguageVersion GNUPlusPlus11 = 5 : Public, Static, Literal, HasDefault
Struct CppSharp.Parser.ParserDiagnosticLevel: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    CppSharp.Parser.ParserDiagnosticLevel Ignored = 0 : Public, Static, Literal, HasDefault
    CppSharp.Parser.ParserDiagnosticLevel Note = 1 : Public, Static, Literal, HasDefault
    CppSharp.Parser.ParserDiagnosticLevel Warning = 2 : Public, Static, Literal, HasDefault
    CppSharp.Parser.ParserDiagnosticLevel Error = 3 : Public, Static, Literal, HasDefault
    CppSharp.Parser.ParserDiagnosticLevel Fatal = 4 : Public, Static, Literal, HasDefault
Struct CppSharp.Parser.ParserResultKind: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    CppSharp.Parser.ParserResultKind Success = 0 : Public, Static, Literal, HasDefault
    CppSharp.Parser.ParserResultKind Error = 1 : Public, Static, Literal, HasDefault
    CppSharp.Parser.ParserResultKind FileNotFound = 2 : Public, Static, Literal, HasDefault
Struct CppSharp.Parser.SourceLocationKind: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    CppSharp.Parser.SourceLocationKind Invalid = 0 : Public, Static, Literal, HasDefault
    CppSharp.Parser.SourceLocationKind Builtin = 1 : Public, Static, Literal, HasDefault
    CppSharp.Parser.SourceLocationKind CommandLine = 2 : Public, Static, Literal, HasDefault
    CppSharp.Parser.SourceLocationKind System = 3 : Public, Static, Literal, HasDefault
    CppSharp.Parser.SourceLocationKind User = 4 : Public, Static, Literal, HasDefault
Struct CppSharp.Parser.ParserIntType: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    CppSharp.Parser.ParserIntType NoInt = 0 : Public, Static, Literal, HasDefault
    CppSharp.Parser.ParserIntType SignedChar = 1 : Public, Static, Literal, HasDefault
    CppSharp.Parser.ParserIntType UnsignedChar = 2 : Public, Static, Literal, HasDefault
    CppSharp.Parser.ParserIntType SignedShort = 3 : Public, Static, Literal, HasDefault
    CppSharp.Parser.ParserIntType UnsignedShort = 4 : Public, Static, Literal, HasDefault
    CppSharp.Parser.ParserIntType SignedInt = 5 : Public, Static, Literal, HasDefault
    CppSharp.Parser.ParserIntType UnsignedInt = 6 : Public, Static, Literal, HasDefault
    CppSharp.Parser.ParserIntType SignedLong = 7 : Public, Static, Literal, HasDefault
    CppSharp.Parser.ParserIntType UnsignedLong = 8 : Public, Static, Literal, HasDefault
    CppSharp.Parser.ParserIntType SignedLongLong = 9 : Public, Static, Literal, HasDefault
    CppSharp.Parser.ParserIntType UnsignedLongLong = 10 : Public, Static, Literal, HasDefault
